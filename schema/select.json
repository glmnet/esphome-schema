{
  "select": {
    "action": {
      "first": {
        "docs": "This is an [Action](https://esphome.io/automations/actions.html#config-action) for selecting the first option in a select component.\n\n*See also: [`select.first` Action](https://esphome.io/components/select/index.html#select-first-action)*",
        "maybe": "id",
        "schema": {
          "config_vars": {
            "mode": {
              "default": "FIRST",
              "key": "Optional",
              "type": "enum",
              "values": {
                "FIRST": null
              }
            }
          },
          "extends": [
            "select.OPERATION_BASE_SCHEMA"
          ]
        },
        "type": "schema"
      },
      "last": {
        "docs": "This is an [Action](https://esphome.io/automations/actions.html#config-action) for selecting the last option in a select component.\n\n*See also: [`select.last` Action](https://esphome.io/components/select/index.html#select-last-action)*",
        "maybe": "id",
        "schema": {
          "config_vars": {
            "mode": {
              "default": "LAST",
              "key": "Optional",
              "type": "enum",
              "values": {
                "LAST": null
              }
            }
          },
          "extends": [
            "select.OPERATION_BASE_SCHEMA"
          ]
        },
        "type": "schema"
      },
      "next": {
        "docs": "This is an [Action](https://esphome.io/automations/actions.html#config-action) for selecting the next option in a select component.\n\n*See also: [`select.next` Action](https://esphome.io/components/select/index.html#select-next-action)*",
        "maybe": "id",
        "schema": {
          "config_vars": {
            "cycle": {
              "default": "True",
              "docs": "**, boolean**: Whether or not to jump back to the first option of the select when the last option is currently selected. Defaults to `true`.\n\n*See also: [Select Component](https://esphome.io/components/select/index.html#select-next-action)*",
              "key": "Optional",
              "type": "boolean"
            },
            "mode": {
              "default": "NEXT",
              "key": "Optional",
              "type": "enum",
              "values": {
                "NEXT": null
              }
            }
          },
          "extends": [
            "select.OPERATION_BASE_SCHEMA"
          ]
        },
        "type": "schema"
      },
      "operation": {
        "docs": "This is an [Action](https://esphome.io/automations/actions.html#config-action) that can be used to change the active option in a select component (first, last, previous or next), using a generic templatable action call.\n\n*See also: [`select.operation` Action](https://esphome.io/components/select/index.html#select-operation-action)*",
        "schema": {
          "config_vars": {
            "cycle": {
              "default": "True",
              "docs": "**, bool, [templatable](https://esphome.io/automations/templates.html#config-templatable)**: Can be used for options `NEXT` and `PREVIOUS` to specify whether or not to wrap around the options list when respectively the last or first option in the select is currently active.\n\n*See also: [Select Component](https://esphome.io/components/select/index.html#select-operation-action)*",
              "key": "Optional",
              "templatable": true,
              "type": "boolean"
            },
            "operation": {
              "docs": "**, string, [templatable](https://esphome.io/automations/templates.html#config-templatable)**: The operation to perform. One of `FIRST`, `LAST`, `PREVIOUS` or `NEXT` (case insensitive). When writing a lambda for this field, then return one of the following enum values: `SELECT_OP_FIRST`, `SELECT_OP_LAST`, `SELECT_OP_PREVIOUS` or `SELECT_OP_NEXT`.\n\n*See also: [Select Component](https://esphome.io/components/select/index.html#select-operation-action)*",
              "key": "Required",
              "templatable": true,
              "type": "enum",
              "values": {
                "FIRST": null,
                "LAST": null,
                "NEXT": null,
                "PREVIOUS": null
              }
            }
          },
          "extends": [
            "select.OPERATION_BASE_SCHEMA"
          ]
        },
        "type": "schema"
      },
      "previous": {
        "docs": "This is an [Action](https://esphome.io/automations/actions.html#config-action) for selecting the previous option in a select component.\n\n*See also: [`select.previous` Action](https://esphome.io/components/select/index.html#select-previous-action)*",
        "maybe": "id",
        "schema": {
          "config_vars": {
            "cycle": {
              "default": "True",
              "docs": "**, boolean**: Whether or not to jump to the last option of the select when the first option is currently selected. Defaults to `true`.\n\n*See also: [Select Component](https://esphome.io/components/select/index.html#select-previous-action)*",
              "key": "Optional",
              "type": "boolean"
            },
            "mode": {
              "default": "PREVIOUS",
              "key": "Optional",
              "type": "enum",
              "values": {
                "PREVIOUS": null
              }
            }
          },
          "extends": [
            "select.OPERATION_BASE_SCHEMA"
          ]
        },
        "type": "schema"
      },
      "set": {
        "docs": "You can also set an option for the template select from elsewhere in your YAML file with the [select.set Action](https://esphome.io/components/select/index.html#select-set-action).\n\n*See also: [`select.set` Action](https://esphome.io/components/select/template.html#select-set-action)*",
        "schema": {
          "config_vars": {
            "option": {
              "docs": "**, string, [templatable](https://esphome.io/automations/templates.html#config-templatable)**: The option to set the select to.\n\n*See also: [Select Component](https://esphome.io/components/select/index.html#select-set-action)*",
              "key": "Required",
              "templatable": true,
              "type": "string"
            }
          },
          "extends": [
            "select.OPERATION_BASE_SCHEMA"
          ]
        },
        "type": "schema"
      },
      "set_index": {
        "docs": "This is an [Action](https://esphome.io/automations/actions.html#config-action) for setting the active option using its index offset.\n\n*See also: [`select.set_index` Action](https://esphome.io/components/select/index.html#select-set-index-action)*",
        "schema": {
          "config_vars": {
            "index": {
              "data_type": "positive_int",
              "docs": "**, int, [templatable](https://esphome.io/automations/templates.html#config-templatable)**: The index offset of the option to be activated.\n\n*See also: [Select Component](https://esphome.io/components/select/index.html#select-set-index-action)*",
              "key": "Required",
              "templatable": true,
              "type": "integer"
            }
          },
          "extends": [
            "select.OPERATION_BASE_SCHEMA"
          ]
        },
        "type": "schema"
      }
    },
    "components": {
      "copy": {},
      "ld2410": {},
      "ld2420": {
        "docs": "**Operating Modes:**\n\n*See also: [ld2420 Select](https://esphome.io/components/sensor/ld2420.html#select)*"
      },
      "ld2450": {},
      "logger": {
        "docs": "The `logger` Select platform allows you to create a Select that can be used to change the log level of the logger component.\n\n*See also: [Logger Select](https://esphome.io/components/select/logger.html#logger-select)*"
      },
      "lvgl": {
        "docs": "The `lvgl` select platform creates a select from an LVGL widget and requires [LVGL](https://esphome.io/components/lvgl/index.html) to be configured.\n\n*See also: [LVGL Select](https://esphome.io/components/select/lvgl.html#lvgl-select)*"
      },
      "modbus_controller": {
        "dependencies": [
          "modbus_controller"
        ],
        "docs": "The `modbus_controller` Select platform allows you to create a Select from modbus registers.\n\n*See also: [Modbus Controller Select](https://esphome.io/components/select/modbus_controller.html#modbus-controller-select)*"
      },
      "seeed_mr24hpc1": {
        "docs": "The `seeed_mr24hpc1` select allows you to control the configuration.\n\n*See also: [seeed_mr24hpc1 Select](https://esphome.io/components/seeed_mr24hpc1.html#select)*"
      },
      "seeed_mr60fda2": {
        "dependencies": [
          "seeed_mr60fda2"
        ],
        "docs": "The `seeed_mr60fda2` select allows you to control the configuration.\n\n*See also: [seeed_mr60fda2 Select](https://esphome.io/components/seeed_mr60fda2.html#select)*"
      },
      "template": {
        "docs": "The `template` Select platform allows you to create a Select with templated values using [lambdas](https://esphome.io/automations/templates.html#config-lambda).\n\n*See also: [Template Select](https://esphome.io/components/select/template.html#template-select)*"
      },
      "tuya": {
        "dependencies": [
          "tuya"
        ],
        "docs": "The `tuya` select platform creates a select from a tuya serial component and requires [Tuya MCU](https://esphome.io/components/tuya.html) to be configured.\n\n*See also: [Tuya Select](https://esphome.io/components/select/tuya.html#tuya-select)*"
      }
    },
    "schemas": {
      "OPERATION_BASE_SCHEMA": {
        "schema": {
          "config_vars": {
            "id": {
              "docs": "**, [ID](https://esphome.io/guides/configuration-types.html#config-id)**: The ID of the select to set.\n\n*See also: [Select Component](https://esphome.io/components/select/index.html#select-operation-action)*",
              "key": "Required",
              "type": "use_id",
              "use_id_type": "select::Select"
            }
          }
        },
        "type": "schema"
      },
      "SELECT_SCHEMA": {
        "schema": {
          "config_vars": {
            "id": {
              "docs": "**, string**: Manually specify the ID for code generation. At least one of **id** and **name** must be specified.\n\n*See also: [Select Component](https://esphome.io/components/select/index.html#base-select-configuration)*",
              "id_type": {
                "class": "select::Select",
                "parents": [
                  "EntityBase"
                ]
              },
              "key": "GeneratedID"
            },
            "mqtt_id": {
              "id_type": {
                "class": "mqtt::MQTTSelectComponent",
                "parents": [
                  "Component",
                  "mqtt::MQTTComponent"
                ]
              },
              "key": "Optional"
            },
            "on_value": {
              "docs": "**, [Automation](https://esphome.io/automations/index.html#automation)**: An automation to perform when a new value is published. See [on_value](https://esphome.io/components/select/index.html#select-on-value).\n\n*See also: [Select Component](https://esphome.io/components/select/index.html#base-select-configuration)*",
              "key": "Optional",
              "type": "trigger"
            },
            "web_server": {
              "key": "Optional",
              "schema": {
                "config_vars": {
                  "sorting_group_id": {
                    "key": "Optional",
                    "type": "use_id",
                    "use_id_type": "int"
                  },
                  "sorting_weight": {
                    "key": "Optional"
                  },
                  "web_server_id": {
                    "key": "Optional",
                    "type": "use_id",
                    "use_id_type": "web_server::WebServer"
                  }
                }
              },
              "type": "schema"
            }
          },
          "extends": [
            "core.ENTITY_BASE_SCHEMA",
            "core.MQTT_COMMAND_COMPONENT_SCHEMA"
          ]
        },
        "type": "schema"
      }
    }
  }
}