{
  "esp32_improv": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "schema": {
          "config_vars": {
            "authorized_duration": {
              "default": "1min",
              "docs": "**, [Time](https://esphome.io/guides/configuration-types.html#config-time)**: The amount of time until authorization times out and needs to be re-authorized. Defaults to `1min`.\n\n*See also: [Improv via BLE](https://esphome.io/components/esp32_improv.html#configuration-variables)*",
              "key": "Optional",
              "schema": {
                "extends": [
                  "core.positive_time_period_milliseconds"
                ]
              },
              "type": "schema"
            },
            "authorizer": {
              "docs": "**, [ID](https://esphome.io/guides/configuration-types.html#config-id)**: A [binary sensor](https://esphome.io/components/binary_sensor/index.html) to authorize with. Also accepts `none` to skip authorization.\n\n*See also: [Improv via BLE](https://esphome.io/components/esp32_improv.html#configuration-variables)*",
              "key": "Required",
              "type": "use_id",
              "use_id_type": "binary_sensor::BinarySensor"
            },
            "id": {
              "id_type": {
                "class": "esp32_improv::ESP32ImprovComponent",
                "parents": [
                  "Component"
                ]
              },
              "key": "GeneratedID"
            },
            "identify_duration": {
              "default": "10s",
              "docs": "**, [Time](https://esphome.io/guides/configuration-types.html#config-time)**: The amount of time to identify for. Defaults to `10s`.\n\n*See also: [Improv via BLE](https://esphome.io/components/esp32_improv.html#configuration-variables)*",
              "key": "Optional",
              "schema": {
                "extends": [
                  "core.positive_time_period_milliseconds"
                ]
              },
              "type": "schema"
            },
            "on_provisioned": {
              "docs": "**, [Automation](https://esphome.io/automations/index.html#automation)**: An action to be performed when provisioning has completed. See [on_provisioned](https://esphome.io/components/esp32_improv.html#improv-on-provisioned).\n\n*See also: [Improv via BLE](https://esphome.io/components/esp32_improv.html#configuration-variables)*",
              "key": "Optional",
              "type": "trigger"
            },
            "on_provisioning": {
              "docs": "**, [Automation](https://esphome.io/automations/index.html#automation)**: An action to be performed when the device begins the provisioning process. See [on_provisioning](https://esphome.io/components/esp32_improv.html#improv-on-provisioning).\n\n*See also: [Improv via BLE](https://esphome.io/components/esp32_improv.html#configuration-variables)*",
              "key": "Optional",
              "type": "trigger"
            },
            "on_start": {
              "docs": "**, [Automation](https://esphome.io/automations/index.html#automation)**: An action to be performed when Improv is waiting for authorization and/or upon authorization. See [on_start](https://esphome.io/components/esp32_improv.html#improv-on-start).\n\n*See also: [Improv via BLE](https://esphome.io/components/esp32_improv.html#configuration-variables)*",
              "key": "Optional",
              "type": "trigger"
            },
            "on_state": {
              "docs": "**, [Automation](https://esphome.io/automations/index.html#automation)**: An action to be performed when an Improv state change happens. See [on_state](https://esphome.io/components/esp32_improv.html#improv-on-state).\n\n*See also: [Improv via BLE](https://esphome.io/components/esp32_improv.html#configuration-variables)*",
              "key": "Optional",
              "type": "trigger"
            },
            "on_stop": {
              "docs": "**, [Automation](https://esphome.io/automations/index.html#automation)**: An action to be performed when Improv has stopped. See [on_stop](https://esphome.io/components/esp32_improv.html#improv-on-stop).\n\n*See also: [Improv via BLE](https://esphome.io/components/esp32_improv.html#configuration-variables)*",
              "key": "Optional",
              "type": "trigger"
            },
            "status_indicator": {
              "docs": "**, [ID](https://esphome.io/guides/configuration-types.html#config-id)**: An [output](https://esphome.io/components/output/index.html) to display feedback to the user.\n\n*See also: [Improv via BLE](https://esphome.io/components/esp32_improv.html#configuration-variables)*",
              "key": "Optional",
              "type": "use_id",
              "use_id_type": "output::BinaryOutput"
            },
            "wifi_timeout": {
              "default": "1min",
              "docs": "**, [Time](https://esphome.io/guides/configuration-types.html#config-time)**: The amount of time to wait before starting the Improv service after Wi-Fi is no longer connected. Defaults to `1min`.\n\n*See also: [Improv via BLE](https://esphome.io/components/esp32_improv.html#configuration-variables)*",
              "key": "Optional",
              "schema": {
                "extends": [
                  "core.positive_time_period_milliseconds"
                ]
              },
              "type": "schema"
            }
          },
          "extends": [
            "core.COMPONENT_SCHEMA"
          ]
        },
        "type": "schema"
      }
    }
  }
}