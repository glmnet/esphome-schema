{
  "sun": {
    "condition": {
      "is_above_horizon": {
        "schema": {
          "config_vars": {
            "elevation": {
              "default": "-0.83333",
              "key": "Optional",
              "templatable": true
            },
            "id": {
              "key": "GeneratedID",
              "type": "use_id",
              "use_id_type": "sun::Sun"
            }
          }
        },
        "type": "schema"
      },
      "is_below_horizon": {
        "schema": {
          "config_vars": {
            "elevation": {
              "default": "-0.83333",
              "key": "Optional",
              "templatable": true
            },
            "id": {
              "key": "GeneratedID",
              "type": "use_id",
              "use_id_type": "sun::Sun"
            }
          }
        },
        "type": "schema"
      }
    },
    "schemas": {
      "CONFIG_SCHEMA": {
        "schema": {
          "config_vars": {
            "id": {
              "docs": "**, [ID](https://esphome.io/guides/configuration-types.html#config-id)**: Manually specify the ID used for code generation.\n\n*See also: [Sun](https://esphome.io/components/sun.html#configuration-variables)*",
              "id_type": {
                "class": "sun::Sun",
                "parents": []
              },
              "key": "GeneratedID"
            },
            "latitude": {
              "docs": "**, float**: The latitude for performing the calculation.\n\n*See also: [Sun](https://esphome.io/components/sun.html#configuration-variables)*",
              "key": "Required"
            },
            "longitude": {
              "docs": "**, float**: The longitude for performing the calculation.\n\n*See also: [Sun](https://esphome.io/components/sun.html#configuration-variables)*",
              "key": "Required"
            },
            "on_sunrise": {
              "docs": "**, [Automation](https://esphome.io/automations/index.html#automation)**: An automation to perform at sunrise when the sun crosses a specified angle.\n  * **elevation** (*Optional*, float): The elevation to cross. Defaults to -0.833\u00b0 (the horizon, slightly less than 0\u00b0 to compensate for atmospheric refraction).\n  \n  \n\n*See also: [Sun](https://esphome.io/components/sun.html#configuration-variables)*",
              "key": "Optional",
              "schema": {
                "config_vars": {
                  "elevation": {
                    "default": "-0.83333",
                    "docs": "**, float**: The elevation to cross. Defaults to -0.833\u00b0 (the horizon, slightly less than 0\u00b0 to compensate for atmospheric refraction).\n\n*See also: [Sun](https://esphome.io/components/sun.html#configuration-variables)*",
                    "key": "Optional"
                  },
                  "then": {
                    "type": "trigger"
                  }
                }
              },
              "type": "trigger"
            },
            "on_sunset": {
              "docs": "**, [Automation](https://esphome.io/automations/index.html#automation)**: An automation to perform at sunset when the sun crosses a specified angle.\n  * **elevation** (*Optional*, float): The elevation to cross. Defaults to -0.833\u00b0 (the horizon, slightly less than 0\u00b0 to compensate for atmospheric refraction).\n  \n  \n\n*See also: [Sun](https://esphome.io/components/sun.html#configuration-variables)*",
              "key": "Optional",
              "schema": {
                "config_vars": {
                  "elevation": {
                    "default": "-0.83333",
                    "docs": "**, float**: The elevation to cross. Defaults to -0.833\u00b0 (the horizon, slightly less than 0\u00b0 to compensate for atmospheric refraction).\n\n*See also: [Sun](https://esphome.io/components/sun.html#configuration-variables)*",
                    "key": "Optional"
                  },
                  "then": {
                    "type": "trigger"
                  }
                }
              },
              "type": "trigger"
            },
            "time_id": {
              "key": "GeneratedID",
              "type": "use_id",
              "use_id_type": "time::RealTimeClock"
            }
          }
        },
        "type": "schema"
      }
    }
  },
  "sun.sensor": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "schema": {
          "config_vars": {
            "accuracy_decimals": {
              "default": "1"
            },
            "icon": {
              "default": "mdi:weather-sunset"
            },
            "id": {
              "id_type": {
                "class": "sun::SunSensor",
                "parents": [
                  "Component",
                  "EntityBase",
                  "PollingComponent",
                  "sensor::Sensor"
                ]
              }
            },
            "sun_id": {
              "key": "GeneratedID",
              "type": "use_id",
              "use_id_type": "sun::Sun"
            },
            "type": {
              "docs": "**, string**: The type of value to track. One of `elevation` and `azimuth`.\n\n*See also: [sun Sensor](https://esphome.io/components/sun.html#sun-sensor)*",
              "key": "Required",
              "type": "enum",
              "values": {
                "azimuth": null,
                "elevation": null
              }
            },
            "unit_of_measurement": {
              "default": "\u00b0"
            },
            "update_interval": {
              "default": "60s",
              "key": "Optional"
            }
          },
          "extends": [
            "core.COMPONENT_SCHEMA",
            "sensor.SENSOR_SCHEMA"
          ]
        },
        "type": "schema"
      }
    }
  },
  "sun.text_sensor": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "schema": {
          "config_vars": {
            "elevation": {
              "default": "-0.83333",
              "docs": "**, float**: The elevation to calculate the next sunrise/sunset event for. Defaults to -0.833\u00b0 (the horizon, slightly less than 0\u00b0 to compensate for atmospheric refraction).\n\n*See also: [sun Text Sensor](https://esphome.io/components/sun.html#sun-text-sensor)*",
              "key": "Optional"
            },
            "format": {
              "default": "%X",
              "docs": "**, string**: The format to format the time value with, see [strftime](https://esphome.io/components/time/index.html#strftime) for more information. Defaults to `%X`.\n\n*See also: [sun Text Sensor](https://esphome.io/components/sun.html#sun-text-sensor)*",
              "key": "Optional",
              "type": "string"
            },
            "id": {
              "id_type": {
                "class": "sun::SunTextSensor",
                "parents": [
                  "Component",
                  "EntityBase",
                  "PollingComponent",
                  "text_sensor::TextSensor"
                ]
              }
            },
            "sun_id": {
              "key": "GeneratedID",
              "type": "use_id",
              "use_id_type": "sun::Sun"
            },
            "type": {
              "docs": "**, string**: The type of value to track. One of `sunrise` and `sunset`.\n\n*See also: [sun Text Sensor](https://esphome.io/components/sun.html#sun-text-sensor)*",
              "key": "Required",
              "type": "enum",
              "values": {
                "sunrise": null,
                "sunset": null
              }
            },
            "update_interval": {
              "default": "60s",
              "key": "Optional"
            }
          },
          "extends": [
            "core.COMPONENT_SCHEMA",
            "text_sensor.TEXT_SENSOR_SCHEMA"
          ]
        },
        "type": "schema"
      }
    }
  }
}