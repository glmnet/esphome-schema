{
  "cst226.binary_sensor": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "schema": {
          "config_vars": {
            "cst226_id": {
              "docs": "**, [ID](https://esphome.io/guides/configuration-types.html#config-id)**: Manually specify the ID of the touchscreen.\n\n*See also: [cst226 Binary Sensor](https://esphome.io/components/touchscreen/cst226.html#id1)*",
              "key": "GeneratedID",
              "type": "use_id",
              "use_id_type": "cst226::CST226Touchscreen"
            },
            "id": {
              "id_type": {
                "class": "cst226::CST226Button",
                "parents": [
                  "Component",
                  "EntityBase",
                  "Parented",
                  "Parented<cst226::CST226Touchscreen>",
                  "binary_sensor::BinarySensor",
                  "cst226::CST226ButtonListener"
                ]
              }
            }
          },
          "extends": [
            "binary_sensor.BINARY_SENSOR_SCHEMA"
          ]
        },
        "type": "schema"
      }
    }
  },
  "cst226.touchscreen": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "schema": {
          "config_vars": {
            "address": {
              "data_type": "hex_uint8_t",
              "default": "90",
              "key": "Optional"
            },
            "calibration": {
              "key": "Optional",
              "schema": {
                "extends": [
                  "touchscreen.CALIBRATION_SCHEMA"
                ]
              },
              "type": "schema"
            },
            "display": {
              "key": "GeneratedID",
              "type": "use_id",
              "use_id_type": "display::Display"
            },
            "i2c_id": {
              "key": "GeneratedID",
              "type": "use_id",
              "use_id_type": "i2c::I2CBus"
            },
            "id": {
              "docs": "**, [ID](https://esphome.io/guides/configuration-types.html#config-id)**: Manually set the ID of this touchscreen.\n\n*See also: [cst226 Touch Screen Controller](https://esphome.io/components/touchscreen/cst226.html#configuration-variables)*",
              "id_type": {
                "class": "cst226::CST226Touchscreen",
                "parents": [
                  "Component",
                  "PollingComponent",
                  "i2c::I2CDevice",
                  "touchscreen::Touchscreen"
                ]
              },
              "key": "GeneratedID"
            },
            "interrupt_pin": {
              "docs": "**, [Pin Schema](https://esphome.io/guides/configuration-types.html#config-pin-schema)**: The touch detection pin.\n\n*See also: [cst226 Touch Screen Controller](https://esphome.io/components/touchscreen/cst226.html#configuration-variables)*",
              "internal": true,
              "key": "Optional",
              "modes": [
                "input"
              ],
              "schema": true,
              "type": "pin"
            },
            "on_release": {
              "key": "Optional",
              "type": "trigger"
            },
            "on_touch": {
              "key": "Optional",
              "type": "trigger"
            },
            "on_update": {
              "key": "Optional",
              "type": "trigger"
            },
            "reset_pin": {
              "docs": "**, [Pin Schema](https://esphome.io/guides/configuration-types.html#config-pin-schema)**: The chip reset pin.\n\n*See also: [cst226 Touch Screen Controller](https://esphome.io/components/touchscreen/cst226.html#configuration-variables)*",
              "key": "Optional",
              "modes": [
                "output"
              ],
              "schema": true,
              "type": "pin"
            },
            "touch_timeout": {
              "default": "100ms",
              "key": "Optional",
              "schema": {
                "extends": [
                  "core.positive_time_period_milliseconds"
                ]
              },
              "type": "schema"
            },
            "transform": {
              "key": "Optional",
              "schema": {
                "config_vars": {
                  "mirror_x": {
                    "default": "False",
                    "key": "Optional",
                    "type": "boolean"
                  },
                  "mirror_y": {
                    "default": "False",
                    "key": "Optional",
                    "type": "boolean"
                  },
                  "swap_xy": {
                    "default": "False",
                    "key": "Optional",
                    "type": "boolean"
                  }
                }
              },
              "type": "schema"
            },
            "update_interval": {
              "default": "50ms",
              "key": "Optional"
            }
          },
          "extends": [
            "core.COMPONENT_SCHEMA"
          ]
        },
        "type": "schema"
      }
    }
  }
}