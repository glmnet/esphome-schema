{
  "lvgl": {
    "action": {
      "pause": {
        "schema": {
          "config_vars": {
            "lvgl_id": {
              "key": "GeneratedID",
              "type": "use_id",
              "use_id_type": "lvgl::LvglComponent"
            },
            "show_snow": {
              "default": "False",
              "key": "Optional"
            }
          }
        },
        "type": "schema"
      },
      "resume": {
        "schema": {
          "config_vars": {
            "lvgl_id": {
              "key": "GeneratedID",
              "type": "use_id",
              "use_id_type": "lvgl::LvglComponent"
            }
          }
        },
        "type": "schema"
      },
      "update": {
        "schema": {
          "config_vars": {
            "disp_bg_color": {
              "key": "Optional"
            },
            "disp_bg_image": {
              "key": "Optional",
              "type": "enum",
              "values": {
                "none": null
              }
            },
            "disp_bg_opa": {
              "key": "Optional"
            },
            "lvgl_id": {
              "key": "GeneratedID",
              "type": "use_id",
              "use_id_type": "lvgl::LvglComponent"
            }
          }
        },
        "type": "schema"
      }
    },
    "condition": {
      "is_idle": {
        "schema": {
          "config_vars": {
            "lvgl_id": {
              "key": "GeneratedID",
              "type": "use_id",
              "use_id_type": "lvgl::LvglComponent"
            },
            "timeout": {
              "key": "Required",
              "schema": {
                "extends": [
                  "core.positive_time_period_milliseconds"
                ]
              },
              "templatable": true,
              "type": "schema"
            }
          }
        },
        "type": "schema"
      },
      "is_paused": {
        "schema": {
          "config_vars": {
            "lvgl_id": {
              "key": "GeneratedID",
              "type": "use_id",
              "use_id_type": "lvgl::LvglComponent"
            }
          }
        },
        "type": "schema"
      }
    },
    "schemas": {
      "CONFIG_SCHEMA": {}
    }
  },
  "lvgl.binary_sensor": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "schema": {
          "config_vars": {
            "id": {},
            "widget": {
              "docs": "The ID of a supported widget configured in LVGL, which will reflect the state of the binary sensor.\n\n*See also: [LVGL Binary Sensor](https://esphome.io/components/binary_sensor/lvgl.html#configuration-variables)*",
              "key": "Required",
              "type": "use_id",
              "use_id_type": "lvgl::LvPseudoButton"
            }
          },
          "extends": [
            "binary_sensor.BINARY_SENSOR_SCHEMA"
          ]
        },
        "type": "schema"
      }
    }
  },
  "lvgl.light": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "schema": {
          "config_vars": {
            "gamma_correct": {
              "default": "0.0"
            },
            "output_id": {
              "id_type": {
                "class": "lvgl::LVLight",
                "parents": [
                  "light::LightOutput"
                ]
              },
              "key": "GeneratedID"
            },
            "widget": {
              "docs": "The ID of a `led` widget configured in LVGL, which will reflect the state of the light.\n\n*See also: [LVGL Light](https://esphome.io/components/light/lvgl.html#configuration-variables)*",
              "key": "Required",
              "type": "use_id",
              "use_id_type": "lv_led_t"
            }
          },
          "extends": [
            "light.RGB_LIGHT_SCHEMA"
          ]
        },
        "type": "schema"
      }
    }
  },
  "lvgl.number": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "schema": {
          "config_vars": {
            "animated": {
              "default": "True",
              "docs": "**, boolean**: Whether to set the value of the widget with an animation (if supported by the widget). Defaults to `true`.\n\n*See also: [LVGL Number](https://esphome.io/components/number/lvgl.html#configuration-variables)*",
              "key": "Optional"
            },
            "id": {
              "id_type": {
                "class": "lvgl::LVGLNumber",
                "parents": [
                  "Component",
                  "EntityBase",
                  "number::Number"
                ]
              },
              "key": "GeneratedID"
            },
            "restore_value": {
              "default": "False",
              "key": "Optional",
              "type": "boolean"
            },
            "update_on_release": {
              "default": "False",
              "docs": "**, boolean**: By default the number will publish a new value each time the value of the associated widget changes. If this option is `true` then the value will only be published when touch is released.\n\n*See also: [LVGL Number](https://esphome.io/components/number/lvgl.html#configuration-variables)*",
              "key": "Optional",
              "type": "boolean"
            },
            "widget": {
              "docs": "The ID of a supported widget configured in LVGL, which will reflect the state of the number.\n\n*See also: [LVGL Number](https://esphome.io/components/number/lvgl.html#configuration-variables)*",
              "key": "Required",
              "type": "use_id",
              "use_id_type": "<member 'base' of 'MockObj' objects>"
            }
          },
          "extends": [
            "number.NUMBER_SCHEMA"
          ]
        },
        "type": "schema"
      }
    }
  },
  "lvgl.select": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "schema": {
          "config_vars": {
            "animated": {
              "default": "False",
              "key": "Optional",
              "type": "boolean"
            },
            "id": {
              "id_type": {
                "class": "lvgl::LVGLSelect",
                "parents": [
                  "Component",
                  "EntityBase",
                  "select::Select"
                ]
              }
            },
            "restore_value": {
              "default": "False",
              "key": "Optional",
              "type": "boolean"
            },
            "widget": {
              "docs": "The ID of a supported widget configured in LVGL, which will reflect the state of the select.\n\n*See also: [LVGL Select](https://esphome.io/components/select/lvgl.html#configuration-variables)*",
              "key": "Required",
              "type": "use_id",
              "use_id_type": "<member 'base' of 'MockObj' objects>"
            }
          },
          "extends": [
            "select.SELECT_SCHEMA"
          ]
        },
        "type": "schema"
      }
    }
  },
  "lvgl.sensor": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "schema": {
          "config_vars": {
            "id": {},
            "widget": {
              "docs": "The ID of a supported widget configured in LVGL, which will reflect the state of the sensor.\n\n*See also: [LVGL Sensor](https://esphome.io/components/sensor/lvgl.html#configuration-variables)*",
              "key": "Required",
              "type": "use_id",
              "use_id_type": "<member 'base' of 'MockObj' objects>"
            }
          },
          "extends": [
            "sensor.SENSOR_SCHEMA"
          ]
        },
        "type": "schema"
      }
    }
  },
  "lvgl.switch": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "schema": {
          "config_vars": {
            "id": {
              "id_type": {
                "class": "lvgl::LVGLSwitch",
                "parents": [
                  "Component",
                  "EntityBase",
                  "switch_::Switch"
                ]
              },
              "key": "GeneratedID"
            },
            "restore_mode": {
              "default": "ALWAYS_OFF",
              "key": "Optional",
              "type": "enum",
              "values": {
                "ALWAYS_OFF": null,
                "ALWAYS_ON": null,
                "DISABLED": null,
                "RESTORE_DEFAULT_OFF": null,
                "RESTORE_DEFAULT_ON": null,
                "RESTORE_INVERTED_DEFAULT_OFF": null,
                "RESTORE_INVERTED_DEFAULT_ON": null
              }
            },
            "widget": {
              "docs": "The ID of a supported widget configured in LVGL, which will reflect the state of the switch.\n\n*See also: [LVGL Switch](https://esphome.io/components/switch/lvgl.html#configuration-variables)*",
              "key": "Required",
              "type": "use_id",
              "use_id_type": "lvgl::LvPseudoButton"
            }
          },
          "extends": [
            "switch._SWITCH_SCHEMA"
          ]
        },
        "type": "schema"
      }
    }
  },
  "lvgl.text": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "schema": {
          "config_vars": {
            "id": {
              "id_type": {
                "class": "lvgl::LVGLText",
                "parents": [
                  "EntityBase",
                  "text::Text"
                ]
              }
            },
            "widget": {
              "docs": "The ID of a `textarea` widget configured in LVGL, which will reflect the state of the text component.\n\n*See also: [LVGL Text](https://esphome.io/components/text/lvgl.html#configuration-variables)*",
              "key": "Required",
              "type": "use_id",
              "use_id_type": "<member 'base' of 'MockObj' objects>"
            }
          },
          "extends": [
            "text.TEXT_SCHEMA"
          ]
        },
        "type": "schema"
      }
    }
  },
  "lvgl.text_sensor": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "schema": {
          "config_vars": {
            "id": {},
            "widget": {
              "docs": "The ID of a `textarea` widget configured in LVGL, which will reflect the state of the text sensor.\n\n*See also: [LVGL Text Sensor](https://esphome.io/components/text_sensor/lvgl.html#configuration-variables)*",
              "key": "Required",
              "type": "use_id",
              "use_id_type": "<member 'base' of 'MockObj' objects>"
            }
          },
          "extends": [
            "text_sensor.TEXT_SENSOR_SCHEMA"
          ]
        },
        "type": "schema"
      }
    }
  }
}