{
  "gpio.binary_sensor": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "schema": {
          "config_vars": {
            "id": {
              "id_type": {
                "class": "gpio::GPIOBinarySensor",
                "parents": [
                  "Component",
                  "EntityBase",
                  "binary_sensor::BinarySensor"
                ]
              }
            },
            "pin": {
              "docs": "**, [Pin Schema](https://esphome.io/guides/configuration-types.html#config-pin-schema)**: The pin to periodically check.\n\n*See also: [GPIO Binary Sensor](https://esphome.io/components/binary_sensor/gpio.html#configuration-variables)*",
              "key": "Required",
              "modes": [
                "input"
              ],
              "schema": true,
              "type": "pin"
            }
          },
          "extends": [
            "binary_sensor.BINARY_SENSOR_SCHEMA",
            "core.COMPONENT_SCHEMA"
          ]
        },
        "type": "schema"
      }
    }
  },
  "gpio.one_wire": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "schema": {
          "config_vars": {
            "id": {
              "id_type": {
                "class": "gpio::GPIOOneWireBus",
                "parents": [
                  "Component",
                  "one_wire::OneWireBus"
                ]
              },
              "key": "GeneratedID"
            },
            "pin": {
              "internal": true,
              "key": "Required",
              "modes": [
                "output"
              ],
              "schema": true,
              "type": "pin"
            }
          },
          "extends": [
            "core.COMPONENT_SCHEMA"
          ]
        },
        "type": "schema"
      }
    }
  },
  "gpio.output": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "schema": {
          "config_vars": {
            "id": {
              "docs": "**, [ID](https://esphome.io/guides/configuration-types.html#config-id)**: The id to use for this output component.\n\n*See also: [GPIO Output](https://esphome.io/components/output/gpio.html#configuration-variables)*",
              "id_type": {
                "class": "gpio::GPIOBinaryOutput",
                "parents": [
                  "Component",
                  "output::BinaryOutput"
                ]
              },
              "key": "Required"
            },
            "pin": {
              "docs": "**, [Pin Schema](https://esphome.io/guides/configuration-types.html#config-pin-schema)**: The pin to turn on and off.\n\n*See also: [GPIO Output](https://esphome.io/components/output/gpio.html#configuration-variables)*",
              "key": "Required",
              "modes": [
                "output"
              ],
              "schema": true,
              "type": "pin"
            }
          },
          "extends": [
            "core.COMPONENT_SCHEMA",
            "output.BINARY_OUTPUT_SCHEMA"
          ]
        },
        "type": "schema"
      }
    }
  },
  "gpio.switch": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "schema": {
          "config_vars": {
            "id": {
              "id_type": {
                "class": "gpio::GPIOSwitch",
                "parents": [
                  "Component",
                  "EntityBase",
                  "switch_::Switch"
                ]
              },
              "key": "GeneratedID"
            },
            "interlock": {
              "docs": "**, list**: A list of other GPIO switches in an interlock group. See [Interlocking](https://esphome.io/components/switch/gpio.html#switch-gpio-interlocking).\n\n*See also: [GPIO Switch](https://esphome.io/components/switch/gpio.html#configuration-variables)*",
              "is_list": true,
              "key": "Optional",
              "type": "use_id",
              "use_id_type": "switch_::Switch"
            },
            "interlock_wait_time": {
              "default": "0ms",
              "docs": "**, [Time](https://esphome.io/guides/configuration-types.html#config-time)**: For interlocking mode, set how long to wait after other items in an interlock group have been disabled before re-activating. Useful for motors where immediately turning on in the other direction could cause problems.\n\n*See also: [GPIO Switch](https://esphome.io/components/switch/gpio.html#configuration-variables)*",
              "key": "Optional",
              "schema": {
                "extends": [
                  "core.positive_time_period_milliseconds"
                ]
              },
              "type": "schema"
            },
            "pin": {
              "docs": "**, [Pin Schema](https://esphome.io/guides/configuration-types.html#config-pin-schema)**: The GPIO pin to use for the switch.\n\n*See also: [GPIO Switch](https://esphome.io/components/switch/gpio.html#configuration-variables)*",
              "key": "Required",
              "modes": [
                "output"
              ],
              "schema": true,
              "type": "pin"
            },
            "restore_mode": {
              "default": "ALWAYS_OFF",
              "key": "Optional",
              "type": "enum",
              "values": {
                "ALWAYS_OFF": null,
                "ALWAYS_ON": null,
                "DISABLED": null,
                "RESTORE_DEFAULT_OFF": null,
                "RESTORE_DEFAULT_ON": null,
                "RESTORE_INVERTED_DEFAULT_OFF": null,
                "RESTORE_INVERTED_DEFAULT_ON": null
              }
            }
          },
          "extends": [
            "core.COMPONENT_SCHEMA",
            "switch._SWITCH_SCHEMA"
          ]
        },
        "type": "schema"
      }
    }
  }
}