{
  "micro_wake_word": {
    "action": {
      "disable_model": {
        "docs": "Disables the specified model so it won\u2019t be detected when the component is running.\n\n*See also: [`micro_wake_word.disable_model` Action](https://esphome.io/components/micro_wake_word.html#micro-wake-word-disable-model-action)*",
        "schema": {
          "extends": [
            "micro_wake_word.MICRO_WAKE_WORLD_MODEL_ACTION_SCHEMA"
          ]
        },
        "type": "schema"
      },
      "enable_model": {
        "docs": "Enables the specified model so it can be detected when the component is running.\n\n*See also: [`micro_wake_word.enable_model` Action](https://esphome.io/components/micro_wake_word.html#micro-wake-word-enable-model-action)*",
        "schema": {
          "extends": [
            "micro_wake_word.MICRO_WAKE_WORLD_MODEL_ACTION_SCHEMA"
          ]
        },
        "type": "schema"
      },
      "start": {
        "docs": "Starts the wake word detection.\n\n*See also: [`micro_wake_word.start` Action](https://esphome.io/components/micro_wake_word.html#micro-wake-word-start-action)*",
        "schema": {
          "extends": [
            "micro_wake_word.MICRO_WAKE_WORD_ACTION_SCHEMA"
          ]
        },
        "type": "schema"
      },
      "stop": {
        "docs": "Stops the wake word detection.\n\n*See also: [`micro_wake_word.stop` Action](https://esphome.io/components/micro_wake_word.html#micro-wake-word-stop-action)*",
        "schema": {
          "extends": [
            "micro_wake_word.MICRO_WAKE_WORD_ACTION_SCHEMA"
          ]
        },
        "type": "schema"
      }
    },
    "condition": {
      "is_running": {
        "docs": "Checks if the component is running to detect wake words.\n\n*See also: [`micro_wake_word.is_running` Condition](https://esphome.io/components/micro_wake_word.html#micro-wake-word-is-running-condition)*",
        "schema": {
          "extends": [
            "micro_wake_word.MICRO_WAKE_WORD_ACTION_SCHEMA"
          ]
        },
        "type": "schema"
      },
      "model_is_enabled": {
        "docs": "Checks if the given model is enabled.\n\n*See also: [`micro_wake_word.model_is_enabled` Condition](https://esphome.io/components/micro_wake_word.html#micro-wake-word-model-is-enabled-condition)*",
        "schema": {
          "extends": [
            "micro_wake_word.MICRO_WAKE_WORLD_MODEL_ACTION_SCHEMA"
          ]
        },
        "type": "schema"
      }
    },
    "schemas": {
      "CONFIG_SCHEMA": {
        "schema": {
          "config_vars": {
            "id": {
              "id_type": {
                "class": "micro_wake_word::MicroWakeWord",
                "parents": [
                  "Component"
                ]
              },
              "key": "GeneratedID"
            },
            "microphone": {
              "default": "{}",
              "docs": "**, [Microphone Source Configuration](https://esphome.io/components/microphone/index.html#config-microphone-source)**: The [microphone](https://esphome.io/components/microphone/index.html) settings to use for audio input.\n\n*See also: [Micro Wake Word](https://esphome.io/components/micro_wake_word.html#configuration-variables)*",
              "key": "Optional",
              "maybe": "microphone",
              "schema": {
                "config_vars": {
                  "bits_per_sample": {
                    "default": "16",
                    "key": "Optional",
                    "type": "integer"
                  },
                  "channels": {
                    "default": "0",
                    "is_list": true,
                    "key": "Optional",
                    "type": "integer"
                  },
                  "gain_factor": {
                    "default": "1",
                    "key": "Optional",
                    "type": "integer"
                  },
                  "id": {
                    "id_type": {
                      "class": "microphone::MicrophoneSource",
                      "parents": []
                    },
                    "key": "GeneratedID"
                  },
                  "microphone": {
                    "key": "GeneratedID",
                    "type": "use_id",
                    "use_id_type": "microphone::Microphone"
                  }
                }
              },
              "type": "schema"
            },
            "models": {
              "docs": "**, list**: The models to use. Only the first model is enabled by default on the first boot. Each model\u2019s enabled state is then saved/restored to/from the flash.\n  * **id** (*Optional*, [ID](https://esphome.io/guides/configuration-types.html#config-id)): The optional ID used for the model actions below.\n  \n  * **model** (**Required**, string): This can be one of:\n    * A simple name of a model that exists in the official [ESPHome Models repository](https://github.com/esphome/micro-wake-word-models). e.g. `okay_nabu`.\n    \n    * A github shorthand URL to a model JSON file. e.g. `github://esphome/micro-wake-word-models/models/okay_nabu.json@main`.\n    \n    * A full URL to a model JSON file. e.g. `https://github.com/esphome/micro-wake-word-models/raw/main/models/okay_nabu.json`.\n    \n    \n  \n  * **probability_cutoff** (*Optional*, percentage): The probability cutoff for the wake word detection. If the probability of the wake word is below this value, the wake word is not detected. A larger value reduces the number of false accepts but increases the number of false rejections.\n  \n  * **sliding_window_size** (*Optional*, int): The size of the sliding window average for the wake word detection. A small value lowers latency but may increase the number of false accepts.\n  \n  * **internal** (*Optional*, boolean): The wake word model is internal to the device and won\u2019t be able to enabled/disabled in Home Assistant.\n  \n  \n\n*See also: [Micro Wake Word](https://esphome.io/components/micro_wake_word.html#configuration-variables)*",
              "is_list": true,
              "key": "Required",
              "maybe": "model",
              "schema": {
                "extends": [
                  "micro_wake_word.MODEL_SCHEMA"
                ]
              },
              "type": "schema"
            },
            "on_wake_word_detected": {
              "docs": "**, Automation**: An automation to perform when the wake word is detected. The `wake_word` phrase from the model manifest is provided as a `std::string` to any actions in this automation.\n\n*See also: [Micro Wake Word](https://esphome.io/components/micro_wake_word.html#configuration-variables)*",
              "key": "Optional",
              "type": "trigger"
            },
            "stop_after_detection": {
              "default": "True",
              "docs": "**, boolean**: Whether to stop the component after detecting a wake word. Defaults to `true`.\n\n*See also: [Micro Wake Word](https://esphome.io/components/micro_wake_word.html#configuration-variables)*",
              "key": "Optional",
              "type": "boolean"
            },
            "vad": {
              "docs": "**, model**: Enable a Voice Activity Detection model to reduce false accepts from non-speech sounds.\n  * **model** (*Optional*, string): This can be one of:\n    * A github shorthand URL to a model JSON file. e.g. `github://esphome/micro-wake-word-models/models/v2/vad.json@main`.\n    \n    * A full URL to a model JSON file. e.g. `https://github.com/esphome/micro-wake-word-models/raw/main/models/v2/vad.json`.\n    \n    \n  \n  * **probability_cutoff** (*Optional*, percentage): The probability cutoff for voice activity detection. If the probability is below this value, then no wake word will be accepted. A larger value reduces the number of false accepts but increases the number of false rejections.\n  \n  * **sliding_window_size** (*Optional*, int): The size of the sliding window average for voice activity detection. The average probability is compared to `probability_cutoff` to determine if voice activity is detected.\n  \n  \n\n*See also: [Micro Wake Word](https://esphome.io/components/micro_wake_word.html#configuration-variables)*",
              "key": "Optional"
            }
          },
          "extends": [
            "core.COMPONENT_SCHEMA"
          ]
        },
        "type": "schema"
      },
      "MICRO_WAKE_WORD_ACTION_SCHEMA": {
        "schema": {
          "config_vars": {
            "id": {
              "key": "GeneratedID",
              "type": "use_id",
              "use_id_type": "micro_wake_word::MicroWakeWord"
            }
          }
        },
        "type": "schema"
      },
      "MICRO_WAKE_WORLD_MODEL_ACTION_SCHEMA": {
        "maybe": "id",
        "schema": {
          "config_vars": {
            "id": {
              "key": "Required",
              "type": "use_id",
              "use_id_type": "micro_wake_word::WakeWordModel"
            }
          }
        },
        "type": "schema"
      },
      "MODEL_SCHEMA": {
        "schema": {
          "config_vars": {
            "id": {
              "docs": "**, [ID](https://esphome.io/guides/configuration-types.html#config-id)**: The optional ID used for the model actions below.\n\n*See also: [Micro Wake Word](https://esphome.io/components/micro_wake_word.html#configuration-variables)*",
              "id_type": {
                "class": "micro_wake_word::WakeWordModel",
                "parents": []
              },
              "key": "GeneratedID"
            },
            "internal": {
              "default": "False",
              "docs": "**, boolean**: The wake word model is internal to the device and won\u2019t be able to enabled/disabled in Home Assistant.\n\n*See also: [Micro Wake Word](https://esphome.io/components/micro_wake_word.html#configuration-variables)*",
              "key": "Optional",
              "type": "boolean"
            },
            "model": {
              "docs": "**, string**: This can be one of:\n  * A simple name of a model that exists in the official [ESPHome Models repository](https://github.com/esphome/micro-wake-word-models). e.g. `okay_nabu`.\n  \n  * A github shorthand URL to a model JSON file. e.g. `github://esphome/micro-wake-word-models/models/okay_nabu.json@main`.\n  \n  * A full URL to a model JSON file. e.g. `https://github.com/esphome/micro-wake-word-models/raw/main/models/okay_nabu.json`.\n  \n  \n\n*See also: [Micro Wake Word](https://esphome.io/components/micro_wake_word.html#configuration-variables)*",
              "key": "Optional",
              "type": "typed",
              "typed_key": "type",
              "types": {
                "git": {
                  "config_vars": {
                    "file": {
                      "key": "Required"
                    },
                    "refresh": {
                      "default": "1d",
                      "key": "Optional",
                      "type": "string"
                    }
                  },
                  "extends": [
                    "core.GIT_SCHEMA"
                  ]
                },
                "http": {
                  "config_vars": {
                    "url": {
                      "key": "Required"
                    }
                  }
                },
                "local": {
                  "config_vars": {
                    "path": {
                      "key": "Required"
                    }
                  }
                }
              }
            },
            "probability_cutoff": {
              "docs": "**, percentage**: The probability cutoff for the wake word detection. If the probability of the wake word is below this value, the wake word is not detected. A larger value reduces the number of false accepts but increases the number of false rejections.\n\n*See also: [Micro Wake Word](https://esphome.io/components/micro_wake_word.html#configuration-variables)*",
              "key": "Optional"
            },
            "raw_data_id": {
              "id_type": {
                "class": "uint8_t",
                "parents": null
              },
              "key": "GeneratedID"
            },
            "sliding_window_size": {
              "data_type": "positive_int",
              "docs": "**, int**: The size of the sliding window average for the wake word detection. A small value lowers latency but may increase the number of false accepts.\n\n*See also: [Micro Wake Word](https://esphome.io/components/micro_wake_word.html#configuration-variables)*",
              "key": "Optional",
              "type": "integer"
            }
          }
        },
        "type": "schema"
      }
    }
  }
}