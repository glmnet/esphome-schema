{
  "key_collector": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "is_list": true,
        "schema": {
          "config_vars": {
            "allowed_keys": {
              "docs": "**, string**: Keys allowed to be used. If not specified, then any otherwise unused keys will be allowed.\n\n*See also: [Component](https://esphome.io/components/key_collector.html#component)*",
              "key": "Optional",
              "type": "string"
            },
            "back_keys": {
              "docs": "**, string**: Keys used to delete the last pressed key. Like *Backspace* on a keyboard.\n\n*See also: [Component](https://esphome.io/components/key_collector.html#component)*",
              "key": "Optional",
              "type": "string"
            },
            "clear_keys": {
              "docs": "**, string**: Keys used to entirely clear the sequence, all the pressed keys.\n\n*See also: [Component](https://esphome.io/components/key_collector.html#component)*",
              "key": "Optional",
              "type": "string"
            },
            "end_key_required": {
              "docs": "**, boolean**: Only trigger `on_result` automation when one of the `end_keys` was pressed. Defaults to `false`.\n\n*See also: [Component](https://esphome.io/components/key_collector.html#component)*",
              "key": "Optional",
              "type": "boolean"
            },
            "end_keys": {
              "docs": "**, string**: Keys used to *enter* the sequence.\n\n*See also: [Component](https://esphome.io/components/key_collector.html#component)*",
              "key": "Optional",
              "type": "string"
            },
            "id": {
              "docs": "**, [ID](https://esphome.io/guides/configuration-types.html#config-id)**: Set the ID of this entry for use in lambdas.\n\n*See also: [Component](https://esphome.io/components/key_collector.html#component)*",
              "id_type": {
                "class": "key_collector::KeyCollector",
                "parents": [
                  "Component"
                ]
              },
              "key": "GeneratedID"
            },
            "max_length": {
              "docs": "**, integer**: The maximum length of the desired key sequence, after which the sequence will trigger the `on_result` automation witout having to press any of the `end_keys`\n\n*See also: [Component](https://esphome.io/components/key_collector.html#component)*",
              "key": "Optional",
              "type": "integer"
            },
            "min_length": {
              "docs": "**, integer**: The minimal length of the desired key sequence. Below this, `on_result` automation will not trigger even if any of the `end_keys` was pressed.\n\n*See also: [Component](https://esphome.io/components/key_collector.html#component)*",
              "key": "Optional",
              "type": "integer"
            },
            "on_progress": {
              "key": "Optional",
              "type": "trigger"
            },
            "on_result": {
              "key": "Optional",
              "type": "trigger"
            },
            "on_timeout": {
              "key": "Optional",
              "type": "trigger"
            },
            "source_id": {
              "docs": "**, [ID](https://esphome.io/guides/configuration-types.html#config-id)**: The ID of the key input device.\n\n*See also: [Component](https://esphome.io/components/key_collector.html#component)*",
              "key": "Optional",
              "type": "use_id",
              "use_id_type": "key_provider::KeyProvider"
            },
            "start_keys": {
              "key": "Optional",
              "type": "string"
            },
            "timeout": {
              "docs": "**, [Time](https://esphome.io/guides/configuration-types.html#config-time)**: Timeout after which to cancel building the sequence and delete all the keys.\n\n*See also: [Component](https://esphome.io/components/key_collector.html#component)*",
              "key": "Optional",
              "schema": {
                "extends": [
                  "core.positive_time_period_milliseconds"
                ]
              },
              "type": "schema"
            }
          },
          "extends": [
            "core.COMPONENT_SCHEMA"
          ]
        },
        "type": "schema"
      }
    }
  }
}