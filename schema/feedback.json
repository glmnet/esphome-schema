{
  "feedback.cover": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "schema": {
          "config_vars": {
            "acceleration_wait_time": {
              "default": "0s",
              "key": "Optional",
              "schema": {
                "extends": [
                  "core.positive_time_period_milliseconds"
                ]
              },
              "type": "schema"
            },
            "assumed_state": {
              "key": "Optional",
              "type": "boolean"
            },
            "close_action": {
              "key": "Required",
              "type": "trigger"
            },
            "close_duration": {
              "key": "Required",
              "schema": {
                "extends": [
                  "core.positive_time_period_milliseconds"
                ]
              },
              "type": "schema"
            },
            "close_endstop": {
              "key": "Optional",
              "type": "use_id",
              "use_id_type": "binary_sensor::BinarySensor"
            },
            "close_obstacle_sensor": {
              "key": "Optional",
              "type": "use_id",
              "use_id_type": "binary_sensor::BinarySensor"
            },
            "close_sensor": {
              "key": "Optional",
              "type": "use_id",
              "use_id_type": "binary_sensor::BinarySensor"
            },
            "direction_change_wait_time": {
              "key": "Optional",
              "schema": {
                "extends": [
                  "core.positive_time_period_milliseconds"
                ]
              },
              "type": "schema"
            },
            "has_built_in_endstop": {
              "default": "False",
              "key": "Optional",
              "type": "boolean"
            },
            "id": {
              "id_type": {
                "class": "feedback::FeedbackCover",
                "parents": [
                  "Component",
                  "EntityBase",
                  "cover::Cover"
                ]
              }
            },
            "infer_endstop_from_movement": {
              "default": "False",
              "key": "Optional",
              "type": "boolean"
            },
            "max_duration": {
              "key": "Optional",
              "schema": {
                "extends": [
                  "core.positive_time_period_milliseconds"
                ]
              },
              "type": "schema"
            },
            "obstacle_rollback": {
              "default": "10%",
              "key": "Optional"
            },
            "open_action": {
              "key": "Required",
              "type": "trigger"
            },
            "open_duration": {
              "key": "Required",
              "schema": {
                "extends": [
                  "core.positive_time_period_milliseconds"
                ]
              },
              "type": "schema"
            },
            "open_endstop": {
              "key": "Optional",
              "type": "use_id",
              "use_id_type": "binary_sensor::BinarySensor"
            },
            "open_obstacle_sensor": {
              "key": "Optional",
              "type": "use_id",
              "use_id_type": "binary_sensor::BinarySensor"
            },
            "open_sensor": {
              "key": "Optional",
              "type": "use_id",
              "use_id_type": "binary_sensor::BinarySensor"
            },
            "stop_action": {
              "key": "Required",
              "type": "trigger"
            },
            "update_interval": {
              "default": "1000ms",
              "key": "Optional",
              "schema": {
                "extends": [
                  "core.positive_time_period_milliseconds"
                ]
              },
              "type": "schema"
            }
          },
          "extends": [
            "core.COMPONENT_SCHEMA",
            "cover.COVER_SCHEMA"
          ]
        },
        "type": "schema"
      }
    }
  }
}