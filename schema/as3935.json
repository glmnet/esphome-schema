{
  "as3935": {
    "schemas": {
      "AS3935_SCHEMA": {
        "schema": {
          "config_vars": {
            "calibration": {
              "default": "True",
              "docs": "**, boolean**: Enable/disable oscillator calibration on startup. It is recommended to perform antenna tuning procedure first and adjust parameters, so that RLC antenna resonance is tuned within optimal range. Defaults to `True`.\n\n*See also: [as3935 Over I\u00b2C](https://esphome.io/components/sensor/as3935.html#id1)*",
              "key": "Optional",
              "type": "boolean"
            },
            "capacitance": {
              "default": "0",
              "docs": "**, int**: This setting will add capacitance to the series RLC antenna on the product to help tune its resonance. The datasheet specifies being within 3.5 percent of 500kHz to get optimal lightning detection and distance sensing. It\u2019s possible to add up to 120pF in steps of 8pF to the antenna. Defaults to `0`.\n\n*See also: [as3935 Over I\u00b2C](https://esphome.io/components/sensor/as3935.html#id1)*",
              "key": "Optional",
              "type": "integer"
            },
            "div_ratio": {
              "default": "0",
              "docs": "**, int**: The antenna is designed to resonate at 500kHz and so can be tuned with the following setting. The accuracy of the antenna must be within 3.5 percent of that value for proper signal validation and distance estimation. Defaults to `0`.\n\n*See also: [as3935 Over I\u00b2C](https://esphome.io/components/sensor/as3935.html#id1)*",
              "key": "Optional",
              "type": "enum",
              "values": {
                "0": null,
                "128": null,
                "16": null,
                "32": null,
                "64": null
              }
            },
            "id": {
              "id_type": {
                "class": "as3935::AS3935Component",
                "parents": [
                  "Component"
                ]
              },
              "key": "GeneratedID"
            },
            "indoor": {
              "default": "True",
              "docs": "**, boolean**: Indicates if the sensor is used indoor. Defaults to `true`.\n\n*See also: [as3935 Over I\u00b2C](https://esphome.io/components/sensor/as3935.html#id1)*",
              "key": "Optional",
              "type": "boolean"
            },
            "irq_pin": {
              "docs": "**, [Pin](https://esphome.io/guides/configuration-types.html#config-pin)**: The IRQ pin, which indicates if a lightning strike has been detected.\n\n*See also: [as3935 Over I\u00b2C](https://esphome.io/components/sensor/as3935.html#id1)*",
              "key": "Required",
              "modes": [
                "input"
              ],
              "schema": true,
              "type": "pin"
            },
            "lightning_threshold": {
              "default": "1",
              "docs": "**, int**: The number of lightnings that must appear in a 15-minute time window before a lightning storm is detected. 15 minutes is the window of time before the number of detected lightning events is reset. The number of lightning strikes can be set to 1,5,9, or 16. Defaults to `1`.\n\n*See also: [as3935 Over I\u00b2C](https://esphome.io/components/sensor/as3935.html#id1)*",
              "key": "Optional",
              "type": "enum",
              "values": {
                "1": null,
                "16": null,
                "5": null,
                "9": null
              }
            },
            "mask_disturber": {
              "default": "False",
              "docs": "**, boolean**: This setting will return whether or not disturbers trigger the IRQ Pin. Defaults to `false`.\n\n*See also: [as3935 Over I\u00b2C](https://esphome.io/components/sensor/as3935.html#id1)*",
              "key": "Optional",
              "type": "boolean"
            },
            "noise_level": {
              "default": "2",
              "docs": "**, int**: Noise floor level is compared to known reference voltage. If this level is exceeded the chip will issue an interrupt to the IRQ pin, broadcasting that it can not operate properly due to noise (INT_NH). Defaults to `2`.\n\n*See also: [as3935 Over I\u00b2C](https://esphome.io/components/sensor/as3935.html#id1)*",
              "key": "Optional",
              "type": "integer"
            },
            "spike_rejection": {
              "default": "2",
              "docs": "**, int**: Helps to differentiate between false events and actual lightning. Increasing this value increases robustness at the cost of sensitivity to distant events. Defaults to `2`.\n\n*See also: [as3935 Over I\u00b2C](https://esphome.io/components/sensor/as3935.html#id1)*",
              "key": "Optional",
              "type": "integer"
            },
            "tune_antenna": {
              "default": "False",
              "docs": "**, boolean**: Start sensor in antenna tuning mode. It will emit oscillator frequency to be read on the INT pin. Please follow AS3935 documentation. Note that while this mode is enabled, lightings will not be detected. It should be used for initial calibration only, in order to determine correct value of `capacitance` and/or `div_ratio` parameters. Defaults to `False`.\n\n*See also: [as3935 Over I\u00b2C](https://esphome.io/components/sensor/as3935.html#id1)*",
              "key": "Optional",
              "type": "boolean"
            },
            "watchdog_threshold": {
              "default": "2",
              "docs": "**, int**: Determines the threshold for events that trigger the IRQ pin. Defaults to `2`.\n\n*See also: [as3935 Over I\u00b2C](https://esphome.io/components/sensor/as3935.html#id1)*",
              "key": "Optional",
              "type": "integer"
            }
          }
        },
        "type": "schema"
      }
    }
  },
  "as3935.binary_sensor": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "schema": {
          "config_vars": {
            "as3935_id": {
              "key": "GeneratedID",
              "type": "use_id",
              "use_id_type": "as3935::AS3935Component"
            }
          },
          "extends": [
            "binary_sensor.BINARY_SENSOR_SCHEMA"
          ]
        },
        "type": "schema"
      }
    }
  },
  "as3935.sensor": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "schema": {
          "config_vars": {
            "as3935_id": {
              "key": "GeneratedID",
              "type": "use_id",
              "use_id_type": "as3935::AS3935Component"
            },
            "distance": {
              "docs": "Distance in km to the front of the storm and not the distance to a lightning strike. All options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n\n*See also: [as3935 Sensor](https://esphome.io/components/sensor/as3935.html#sensor)*",
              "key": "Optional",
              "schema": {
                "config_vars": {
                  "accuracy_decimals": {
                    "default": "1"
                  },
                  "icon": {
                    "default": "mdi:signal"
                  },
                  "unit_of_measurement": {
                    "default": "km"
                  }
                },
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ]
              },
              "type": "schema"
            },
            "lightning_energy": {
              "docs": "Lightning energy value. According to the datasheet this is only a pure value that doesn\u2019t have any physical meaning. All options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n\n*See also: [as3935 Sensor](https://esphome.io/components/sensor/as3935.html#sensor)*",
              "key": "Optional",
              "schema": {
                "config_vars": {
                  "accuracy_decimals": {
                    "default": "1"
                  },
                  "icon": {
                    "default": "mdi:flash"
                  }
                },
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ]
              },
              "type": "schema"
            }
          },
          "extends": [
            "core.COMPONENT_SCHEMA"
          ]
        },
        "type": "schema"
      }
    }
  }
}