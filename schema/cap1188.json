{
  "cap1188": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "is_list": true,
        "schema": {
          "config_vars": {
            "address": {
              "data_type": "hex_uint8_t",
              "default": "41",
              "docs": "**, int**: The I\u00b2C address of the sensor. Defaults to `0x29`.\n\n*See also: [cap1188 Component/Hub](https://esphome.io/components/binary_sensor/cap1188.html#configuration-variables)*",
              "key": "Optional"
            },
            "allow_multiple_touches": {
              "default": "False",
              "docs": "**, boolean**: Whether to allow multitouch. Defaults to off.\n\n*See also: [cap1188 Component/Hub](https://esphome.io/components/binary_sensor/cap1188.html#configuration-variables)*",
              "key": "Optional",
              "type": "boolean"
            },
            "i2c_id": {
              "key": "GeneratedID",
              "type": "use_id",
              "use_id_type": "i2c::I2CBus"
            },
            "id": {
              "docs": "**, [ID](https://esphome.io/guides/configuration-types.html#config-id)**: Set the ID of this sensor.\n\n*See also: [cap1188 Component/Hub](https://esphome.io/components/binary_sensor/cap1188.html#configuration-variables)*",
              "id_type": {
                "class": "cap1188::CAP1188Component",
                "parents": [
                  "Component",
                  "i2c::I2CDevice"
                ]
              },
              "key": "GeneratedID"
            },
            "reset_pin": {
              "docs": "**, [Pin](https://esphome.io/guides/configuration-types.html#config-pin)**: Set the pin that is used to reset the CAP1188 board on boot.\n\n*See also: [cap1188 Component/Hub](https://esphome.io/components/binary_sensor/cap1188.html#configuration-variables)*",
              "key": "Optional",
              "modes": [
                "output"
              ],
              "schema": true,
              "type": "pin"
            },
            "touch_threshold": {
              "default": "32",
              "docs": "**, int**: The touch threshold for all channels. This defines the sensitivity for touch detection.\n  * `0x01`: Maximum sensitivity - Most sensitive to touch\n  \n  * `0x20`: Default sensitivity\n  \n  * `0x40`: Medium sensitivity (I used this sensitivity when being used through a 3mm sheet of plastic)\n  \n  * `0x80`: Minimum sensitivity - Least sensitive to touch\n  \n  \n\n*See also: [cap1188 Component/Hub](https://esphome.io/components/binary_sensor/cap1188.html#configuration-variables)*",
              "key": "Optional",
              "type": "integer"
            }
          },
          "extends": [
            "core.COMPONENT_SCHEMA"
          ]
        },
        "type": "schema"
      }
    }
  },
  "cap1188.binary_sensor": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "schema": {
          "config_vars": {
            "cap1188_id": {
              "docs": "**, [ID](https://esphome.io/guides/configuration-types.html#config-id)**: The ID of the CAP1188 defined above. Useful for multiple CAP1188\u2019s on the I\u00b2C bus.\n\n*See also: [cap1188 Binary Sensor](https://esphome.io/components/binary_sensor/cap1188.html#binary-sensor)*",
              "key": "GeneratedID",
              "type": "use_id",
              "use_id_type": "cap1188::CAP1188Component"
            },
            "channel": {
              "docs": "**, int**: The channel number the CAP1188 the touchkey is connected to.\n\n*See also: [cap1188 Binary Sensor](https://esphome.io/components/binary_sensor/cap1188.html#binary-sensor)*",
              "key": "Required",
              "type": "integer"
            },
            "id": {
              "id_type": {
                "class": "cap1188::CAP1188Channel",
                "parents": [
                  "EntityBase",
                  "binary_sensor::BinarySensor"
                ]
              }
            }
          },
          "extends": [
            "binary_sensor.BINARY_SENSOR_SCHEMA"
          ]
        },
        "type": "schema"
      }
    }
  }
}