{
  "atm90e26.sensor": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "schema": {
          "config_vars": {
            "cs_pin": {
              "docs": "**, [Pin Schema](https://esphome.io/guides/configuration-types.html#config-pin-schema)**: The pin CS is connected to. For the 6 channel meter main board, this will always be 5 and 4. For the add-on boards a jumper can be selected for each CS pin, but default to 0 and 16.\n\n*See also: [ATM90E26 Power Sensor](https://esphome.io/components/sensor/atm90e26.html#configuration-variables)*",
              "key": "Required",
              "modes": [
                "output"
              ],
              "schema": true,
              "type": "pin"
            },
            "current": {
              "docs": "Use the current value of this phase in amperes. All options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n\n*See also: [ATM90E26 Power Sensor](https://esphome.io/components/sensor/atm90e26.html#configuration-variables)*",
              "key": "Optional",
              "schema": {
                "config_vars": {
                  "accuracy_decimals": {
                    "default": "2"
                  },
                  "device_class": {
                    "default": "current"
                  },
                  "state_class": {
                    "default": "measurement"
                  },
                  "unit_of_measurement": {
                    "default": "A"
                  }
                },
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ]
              },
              "type": "schema"
            },
            "data_rate": {
              "key": "Optional",
              "type": "enum",
              "values": {
                "1000.0": null,
                "1000000.0": null,
                "10000000.0": null,
                "200000.0": null,
                "2000000.0": null,
                "20000000.0": null,
                "4000000.0": null,
                "40000000.0": null,
                "5000000.0": null,
                "75000.0": null,
                "8000000.0": null,
                "80000000.0": null
              }
            },
            "forward_active_energy": {
              "docs": "Use the forward active energy value on this phase in watt-hours. All options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n\n*See also: [ATM90E26 Power Sensor](https://esphome.io/components/sensor/atm90e26.html#configuration-variables)*",
              "key": "Optional",
              "schema": {
                "config_vars": {
                  "accuracy_decimals": {
                    "default": "2"
                  },
                  "device_class": {
                    "default": "energy"
                  },
                  "state_class": {
                    "default": "total_increasing"
                  },
                  "unit_of_measurement": {
                    "default": "Wh"
                  }
                },
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ]
              },
              "type": "schema"
            },
            "frequency": {
              "docs": "Use the frequency value calculated by the meter. All options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n\n*See also: [ATM90E26 Power Sensor](https://esphome.io/components/sensor/atm90e26.html#configuration-variables)*",
              "key": "Optional",
              "schema": {
                "config_vars": {
                  "accuracy_decimals": {
                    "default": "1"
                  },
                  "icon": {
                    "default": "mdi:current-ac"
                  },
                  "state_class": {
                    "default": "measurement"
                  },
                  "unit_of_measurement": {
                    "default": "Hz"
                  }
                },
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ]
              },
              "type": "schema"
            },
            "gain_ct": {
              "data_type": "uint16_t",
              "default": "31251",
              "docs": "**, int**: CT clamp calibration value. Defaults to `31251`.\n\n*See also: [ATM90E26 Power Sensor](https://esphome.io/components/sensor/atm90e26.html#configuration-variables)*",
              "key": "Optional",
              "type": "integer"
            },
            "gain_metering": {
              "data_type": "uint16_t",
              "default": "7481",
              "docs": "**, int**: This value determines how quickly internal energy registers accumulate and hence defines the value of a \u201cpulse\u201d. Matching it against an existing meter is useful in that it allows visual confirmation for some devices that blink an LED for each pulse. See also the **meter_constant**. Defaults to `7481`.\n\n*See also: [ATM90E26 Power Sensor](https://esphome.io/components/sensor/atm90e26.html#configuration-variables)*",
              "key": "Optional",
              "type": "integer"
            },
            "gain_pga": {
              "default": "1X",
              "docs": "**, string**: The gain for the CT clamp. Valid values are `1X`, `4X`, `8X`, `16X`, and `24X`. Defaults to `1X`.\n\n*See also: [ATM90E26 Power Sensor](https://esphome.io/components/sensor/atm90e26.html#configuration-variables)*",
              "key": "Optional",
              "type": "enum",
              "values": {
                "16X": null,
                "1X": null,
                "24X": null,
                "4X": null,
                "8X": null
              }
            },
            "gain_voltage": {
              "default": "26400",
              "docs": "**, int**: Voltage gain to scale the low voltage AC power back to household mains feed. Defaults to `26400`.\n\n*See also: [ATM90E26 Power Sensor](https://esphome.io/components/sensor/atm90e26.html#configuration-variables)*",
              "key": "Optional",
              "type": "integer"
            },
            "id": {
              "id_type": {
                "class": "atm90e26::ATM90E26Component",
                "parents": [
                  "Component",
                  "PollingComponent",
                  "spi::SPIDevice"
                ]
              },
              "key": "GeneratedID"
            },
            "line_frequency": {
              "docs": "**, string**: The AC line frequency of the supply voltage. One of `50Hz`, `60Hz`.\n\n*See also: [ATM90E26 Power Sensor](https://esphome.io/components/sensor/atm90e26.html#configuration-variables)*",
              "key": "Required",
              "type": "enum",
              "values": {
                "50HZ": null,
                "60HZ": null
              }
            },
            "meter_constant": {
              "data_type": "positive_float",
              "docs": "**, float**: The number of pulses per kWh. The ATM90E26 internally works based on pulses and this value converts a pulse into Wh, which are emitted as `forward_active_energy` etc. Matching it against an existing meter is useful in that it allows visual confirmation for some devices that blink an LED for each pulse. Common values are 1000 pulses/kWh, 1666.66 pulses/kWh, or 3200 pulses/kWh. See also **gain_metering** which determines after how much energy a pulse is emitted.\n\n*See also: [ATM90E26 Power Sensor](https://esphome.io/components/sensor/atm90e26.html#configuration-variables)*",
              "key": "Required"
            },
            "pl_const": {
              "data_type": "uint32_t",
              "default": "1429876",
              "docs": "**, int**: A constant derived from the physical characteristics of your measurement setup. See the Calibration section. Defaults to `1429876`.\n\n*See also: [ATM90E26 Power Sensor](https://esphome.io/components/sensor/atm90e26.html#configuration-variables)*",
              "key": "Optional",
              "type": "integer"
            },
            "power": {
              "docs": "Use the power value on this phase in watts. All options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n\n*See also: [ATM90E26 Power Sensor](https://esphome.io/components/sensor/atm90e26.html#configuration-variables)*",
              "key": "Optional",
              "schema": {
                "config_vars": {
                  "accuracy_decimals": {
                    "default": "2"
                  },
                  "device_class": {
                    "default": "power"
                  },
                  "state_class": {
                    "default": "measurement"
                  },
                  "unit_of_measurement": {
                    "default": "W"
                  }
                },
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ]
              },
              "type": "schema"
            },
            "power_factor": {
              "docs": "Use the power factor value on this phase. All options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n\n*See also: [ATM90E26 Power Sensor](https://esphome.io/components/sensor/atm90e26.html#configuration-variables)*",
              "key": "Optional",
              "schema": {
                "config_vars": {
                  "accuracy_decimals": {
                    "default": "2"
                  },
                  "device_class": {
                    "default": "power_factor"
                  },
                  "state_class": {
                    "default": "measurement"
                  }
                },
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ]
              },
              "type": "schema"
            },
            "reactive_power": {
              "docs": "Use the reactive power value on this phase. All options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n\n*See also: [ATM90E26 Power Sensor](https://esphome.io/components/sensor/atm90e26.html#configuration-variables)*",
              "key": "Optional",
              "schema": {
                "config_vars": {
                  "accuracy_decimals": {
                    "default": "2"
                  },
                  "icon": {
                    "default": "mdi:lightbulb"
                  },
                  "state_class": {
                    "default": "measurement"
                  },
                  "unit_of_measurement": {
                    "default": "var"
                  }
                },
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ]
              },
              "type": "schema"
            },
            "reverse_active_energy": {
              "docs": "Use the reverse active energy value on this phase in watt-hours. All options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n\n*See also: [ATM90E26 Power Sensor](https://esphome.io/components/sensor/atm90e26.html#configuration-variables)*",
              "key": "Optional",
              "schema": {
                "config_vars": {
                  "accuracy_decimals": {
                    "default": "2"
                  },
                  "device_class": {
                    "default": "energy"
                  },
                  "state_class": {
                    "default": "total_increasing"
                  },
                  "unit_of_measurement": {
                    "default": "Wh"
                  }
                },
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ]
              },
              "type": "schema"
            },
            "spi_id": {
              "docs": "**, [ID](https://esphome.io/guides/configuration-types.html#config-id)**: Manually specify the ID of the [SPI Component](https://esphome.io/components/spi.html#spi) if you want to use multiple SPI buses.\n\n*See also: [ATM90E26 Power Sensor](https://esphome.io/components/sensor/atm90e26.html#configuration-variables)*",
              "key": "GeneratedID",
              "type": "use_id",
              "use_id_type": "spi::SPIComponent"
            },
            "spi_mode": {
              "key": "Optional",
              "type": "enum",
              "values": {
                "0": null,
                "1": null,
                "2": null,
                "3": null,
                "MODE0": null,
                "MODE1": null,
                "MODE2": null,
                "MODE3": null
              }
            },
            "update_interval": {
              "default": "60s",
              "docs": "**, [Time](https://esphome.io/guides/configuration-types.html#config-time)**: The interval to check the sensor. Defaults to `60s`.\n\n*See also: [ATM90E26 Power Sensor](https://esphome.io/components/sensor/atm90e26.html#configuration-variables)*",
              "key": "Optional"
            },
            "voltage": {
              "docs": "Use the voltage value of this phase in V (RMS). All options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n\n*See also: [ATM90E26 Power Sensor](https://esphome.io/components/sensor/atm90e26.html#configuration-variables)*",
              "key": "Optional",
              "schema": {
                "config_vars": {
                  "accuracy_decimals": {
                    "default": "2"
                  },
                  "device_class": {
                    "default": "voltage"
                  },
                  "state_class": {
                    "default": "measurement"
                  },
                  "unit_of_measurement": {
                    "default": "V"
                  }
                },
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ]
              },
              "type": "schema"
            }
          },
          "extends": [
            "core.COMPONENT_SCHEMA"
          ]
        },
        "type": "schema"
      }
    }
  }
}