{
  "m5stack_8angle": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "is_list": true,
        "schema": {
          "config_vars": {
            "address": {
              "data_type": "hex_uint8_t",
              "default": "67",
              "docs": "**, int**: Manually specify the I\u00b2C address of the device. Defaults to `0x43`.\n\n*See also: [m5stack_8angle Component/Hub](https://esphome.io/components/sensor/m5stack_8angle.html#configuration-variables)*",
              "key": "Optional"
            },
            "i2c_id": {
              "docs": "**, [ID](https://esphome.io/guides/configuration-types.html#config-id)**: Manually specify the ID of the [I\u00b2C Component](https://esphome.io/components/i2c.html#i2c) if you need\n\n*See also: [m5stack_8angle Component/Hub](https://esphome.io/components/sensor/m5stack_8angle.html#configuration-variables)*",
              "key": "GeneratedID",
              "type": "use_id",
              "use_id_type": "i2c::I2CBus"
            },
            "id": {
              "docs": "**, [ID](https://esphome.io/guides/configuration-types.html#config-id)**: Manually specify the ID used for code generation.\n\n*See also: [m5stack_8angle Component/Hub](https://esphome.io/components/sensor/m5stack_8angle.html#configuration-variables)*",
              "id_type": {
                "class": "m5stack_8angle::M5Stack8AngleComponent",
                "parents": [
                  "Component",
                  "i2c::I2CDevice"
                ]
              },
              "key": "GeneratedID"
            }
          }
        },
        "type": "schema"
      }
    }
  },
  "m5stack_8angle.binary_sensor": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "schema": {
          "config_vars": {
            "id": {
              "id_type": {
                "class": "m5stack_8angle::M5Stack8AngleSwitchBinarySensor",
                "parents": [
                  "Component",
                  "EntityBase",
                  "PollingComponent",
                  "binary_sensor::BinarySensor"
                ]
              }
            },
            "m5stack_8angle_id": {
              "key": "GeneratedID",
              "type": "use_id",
              "use_id_type": "m5stack_8angle::M5Stack8AngleComponent"
            },
            "update_interval": {
              "default": "10s",
              "key": "Optional"
            }
          },
          "extends": [
            "binary_sensor.BINARY_SENSOR_SCHEMA",
            "core.COMPONENT_SCHEMA"
          ]
        },
        "type": "schema"
      }
    }
  },
  "m5stack_8angle.light": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "schema": {
          "config_vars": {
            "m5stack_8angle_id": {
              "key": "GeneratedID",
              "type": "use_id",
              "use_id_type": "m5stack_8angle::M5Stack8AngleComponent"
            },
            "output_id": {
              "id_type": {
                "class": "m5stack_8angle::M5Stack8AngleLightOutput",
                "parents": [
                  "Component",
                  "light::AddressableLight",
                  "light::LightOutput"
                ]
              },
              "key": "GeneratedID"
            }
          },
          "extends": [
            "light.ADDRESSABLE_LIGHT_SCHEMA"
          ]
        },
        "type": "schema"
      }
    }
  },
  "m5stack_8angle.sensor": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "schema": {
          "config_vars": {
            "accuracy_decimals": {
              "default": "2"
            },
            "bit_depth": {
              "default": "8bit",
              "key": "Optional",
              "type": "enum",
              "values": {
                "12": null,
                "8": null
              }
            },
            "channel": {
              "key": "Required",
              "type": "integer"
            },
            "icon": {
              "default": "mdi:rotate-right"
            },
            "id": {
              "id_type": {
                "class": "m5stack_8angle::M5Stack8AngleKnobSensor",
                "parents": [
                  "Component",
                  "EntityBase",
                  "PollingComponent",
                  "sensor::Sensor"
                ]
              }
            },
            "m5stack_8angle_id": {
              "key": "GeneratedID",
              "type": "use_id",
              "use_id_type": "m5stack_8angle::M5Stack8AngleComponent"
            },
            "raw": {
              "default": "False",
              "key": "Optional",
              "type": "boolean"
            },
            "state_class": {
              "default": "measurement"
            },
            "update_interval": {
              "default": "10s",
              "key": "Optional"
            }
          },
          "extends": [
            "core.COMPONENT_SCHEMA",
            "sensor.SENSOR_SCHEMA"
          ]
        },
        "type": "schema"
      }
    }
  }
}