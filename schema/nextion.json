{
  "nextion.binary_sensor": {
    "action": {
      "publish": {
        "docs": "You can also publish a state to a Nextion binary sensor from elsewhere in your YAML file with the `binary_sensor.nextion.publish` action.\n\n*See also: [`binary_sensor.nextion.publish` Action](https://esphome.io/components/binary_sensor/nextion.html#binary-sensor-nextion-publish-action)*",
        "schema": {
          "config_vars": {
            "id": {
              "docs": "**, [ID](https://esphome.io/guides/configuration-types.html#config-id)**: The ID of the Nextion switch.\n\n*See also: [Nextion Binary Sensor Component](https://esphome.io/components/binary_sensor/nextion.html#binary-sensor-nextion-publish-action)*",
              "key": "Required",
              "type": "use_id",
              "use_id_type": "nextion::NextionBinarySensor"
            },
            "publish_state": {
              "default": "true",
              "docs": "**, bool, [templatable](https://esphome.io/automations/templates.html#config-templatable)**: Publish new state to Home Assistant. Default is true.\n\n*See also: [Nextion Binary Sensor Component](https://esphome.io/components/binary_sensor/nextion.html#binary-sensor-nextion-publish-action)*",
              "key": "Optional",
              "templatable": true,
              "type": "boolean"
            },
            "send_to_nextion": {
              "default": "true",
              "docs": "**, bool, [templatable](https://esphome.io/automations/templates.html#config-templatable)**: Publish new state to Nextion display which will update component. Default is true.\n\n*See also: [Nextion Binary Sensor Component](https://esphome.io/components/binary_sensor/nextion.html#binary-sensor-nextion-publish-action)*",
              "key": "Optional",
              "templatable": true,
              "type": "boolean"
            },
            "state": {
              "docs": "**, string, [templatable](https://esphome.io/automations/templates.html#config-templatable)**: The boolean state to publish.\n\n*See also: [Nextion Binary Sensor Component](https://esphome.io/components/binary_sensor/nextion.html#binary-sensor-nextion-publish-action)*",
              "key": "Required",
              "templatable": true,
              "type": "boolean"
            }
          }
        },
        "type": "schema"
      }
    },
    "schemas": {
      "CONFIG_BINARY_SENSOR_SCHEMA": {
        "schema": {
          "config_vars": {
            "background_color": {
              "docs": "**, [Color](https://esphome.io/components/display/index.html#config-color)**: The background color\n\n*See also: [Nextion Switch Component](https://esphome.io/components/switch/nextion.html#configuration-variables)*",
              "key": "Optional",
              "type": "use_id",
              "use_id_type": "Color"
            },
            "component_name": {
              "docs": "**, string**: The name of the Nextion component.\n\n*See also: [Nextion Switch Component](https://esphome.io/components/switch/nextion.html#configuration-variables)*",
              "key": "Optional"
            },
            "foreground_color": {
              "docs": "**, [Color](https://esphome.io/components/display/index.html#config-color)**: The foreground color\n\n*See also: [Nextion Switch Component](https://esphome.io/components/switch/nextion.html#configuration-variables)*",
              "key": "Optional",
              "type": "use_id",
              "use_id_type": "Color"
            },
            "nextion_id": {
              "docs": "**, [ID](https://esphome.io/guides/configuration-types.html#config-id)**: The ID of the Nextion display.\n\n*See also: [Nextion Switch Component](https://esphome.io/components/switch/nextion.html#configuration-variables)*",
              "key": "GeneratedID",
              "type": "use_id",
              "use_id_type": "nextion::Nextion"
            },
            "variable_name": {
              "docs": "**, string**: The name of the Nextion variable. Any value over `0` is considered to be **on**\n\n*See also: [Nextion Switch Component](https://esphome.io/components/switch/nextion.html#configuration-variables)*",
              "key": "Optional"
            },
            "visible": {
              "default": "True",
              "docs": "**, boolean**: Visible or not\n\n*See also: [Nextion Switch Component](https://esphome.io/components/switch/nextion.html#configuration-variables)*",
              "key": "Optional",
              "type": "boolean"
            }
          }
        },
        "type": "schema"
      },
      "CONFIG_SCHEMA": {
        "schema": {
          "config_vars": {
            "component_id": {
              "data_type": "uint8_t",
              "docs": "**, string**: The ID (the number, not name!) of the component to track.\n\n*See also: [Nextion Binary Sensor Component](https://esphome.io/components/binary_sensor/nextion.html#configuration-variables)*",
              "key": "Optional",
              "type": "integer"
            },
            "id": {
              "id_type": {
                "class": "nextion::NextionBinarySensor",
                "parents": [
                  "Component",
                  "EntityBase",
                  "PollingComponent",
                  "binary_sensor::BinarySensor"
                ]
              }
            },
            "page_id": {
              "data_type": "uint8_t",
              "docs": "**, string**: The ID of the page the component is on. Use `0` for the default page.\n\n*See also: [Nextion Binary Sensor Component](https://esphome.io/components/binary_sensor/nextion.html#configuration-variables)*",
              "key": "Optional",
              "type": "integer"
            },
            "update_interval": {
              "default": "never",
              "docs": "**, [Time](https://esphome.io/guides/configuration-types.html#config-time)**: The duration to update the sensor. If using a [Nextion Custom Binary Sensor Protocol](https://esphome.io/components/binary_sensor/nextion.html#nextion-custom-binary-sensor-protocol) this should not be used\n\n*See also: [Nextion Binary Sensor Component](https://esphome.io/components/binary_sensor/nextion.html#configuration-variables)*",
              "key": "Optional"
            }
          },
          "extends": [
            "binary_sensor.BINARY_SENSOR_SCHEMA",
            "core.COMPONENT_SCHEMA",
            "nextion.binary_sensor.CONFIG_BINARY_SENSOR_SCHEMA"
          ]
        },
        "type": "schema"
      }
    }
  },
  "nextion.display": {
    "action": {
      "set_brightness": {
        "maybe": "brightness",
        "schema": {
          "config_vars": {
            "brightness": {
              "key": "Required",
              "templatable": true
            },
            "id": {
              "key": "GeneratedID",
              "type": "use_id",
              "use_id_type": "nextion::Nextion"
            }
          }
        },
        "type": "schema"
      }
    },
    "schemas": {
      "CONFIG_SCHEMA": {
        "schema": {
          "config_vars": {
            "auto_wake_on_touch": {
              "default": "True",
              "docs": "**, boolean**: If set to `true`, the Nextion will be configured to wake from sleep when touched.\n\n*See also: [Nextion TFT LCD Display](https://esphome.io/components/display/nextion.html#configuration-variables)*",
              "key": "Optional",
              "type": "boolean"
            },
            "brightness": {
              "docs": "**, percentage**: When specified, the display brightness will be set to this value at boot.\n\n*See also: [Nextion TFT LCD Display](https://esphome.io/components/display/nextion.html#configuration-variables)*",
              "key": "Optional"
            },
            "command_spacing": {
              "key": "Optional",
              "schema": {
                "extends": [
                  "core.positive_time_period_milliseconds"
                ]
              },
              "type": "schema"
            },
            "exit_reparse_on_start": {
              "default": "False",
              "docs": "**, boolean**: Request the Nextion exit Active Reparse Mode before setup of the display. Defaults to `false`.\n\n*See also: [Nextion TFT LCD Display](https://esphome.io/components/display/nextion.html#configuration-variables)*",
              "key": "Optional",
              "type": "boolean"
            },
            "id": {
              "docs": "**, [ID](https://esphome.io/guides/configuration-types.html#config-id)**: Manually specify the ID used for code generation.\n\n*See also: [Nextion TFT LCD Display](https://esphome.io/components/display/nextion.html#configuration-variables)*",
              "id_type": {
                "class": "nextion::Nextion",
                "parents": [
                  "Component",
                  "PollingComponent",
                  "uart::UARTDevice"
                ]
              },
              "key": "GeneratedID"
            },
            "on_buffer_overflow": {
              "docs": "**, [Action](https://esphome.io/automations/actions.html#config-action)**: An action to be performed when the Nextion reports a buffer overflow. See [Nextion Automation](https://esphome.io/components/display/nextion.html#nextion-on-buffer-overflow).\n\n*See also: [Nextion TFT LCD Display](https://esphome.io/components/display/nextion.html#configuration-variables)*",
              "key": "Optional",
              "type": "trigger"
            },
            "on_page": {
              "docs": "**, [Action](https://esphome.io/automations/actions.html#config-action)**: An action to be performed after a page change. See [Nextion Automation](https://esphome.io/components/display/nextion.html#nextion-on-page).\n\n*See also: [Nextion TFT LCD Display](https://esphome.io/components/display/nextion.html#configuration-variables)*",
              "key": "Optional",
              "type": "trigger"
            },
            "on_setup": {
              "docs": "**, [Action](https://esphome.io/automations/actions.html#config-action)**: An action to be performed after ESPHome connects to the Nextion. See [Nextion Automation](https://esphome.io/components/display/nextion.html#nextion-on-setup).\n\n*See also: [Nextion TFT LCD Display](https://esphome.io/components/display/nextion.html#configuration-variables)*",
              "key": "Optional",
              "type": "trigger"
            },
            "on_sleep": {
              "docs": "**, [Action](https://esphome.io/automations/actions.html#config-action)**: An action to be performed when the Nextion goes to sleep. See [Nextion Automation](https://esphome.io/components/display/nextion.html#nextion-on-sleep).\n\n*See also: [Nextion TFT LCD Display](https://esphome.io/components/display/nextion.html#configuration-variables)*",
              "key": "Optional",
              "type": "trigger"
            },
            "on_touch": {
              "docs": "**, [Action](https://esphome.io/automations/actions.html#config-action)**: An action to be performed after a touch event (press or release). See [Nextion Automation](https://esphome.io/components/display/nextion.html#nextion-on-touch).\n\n*See also: [Nextion TFT LCD Display](https://esphome.io/components/display/nextion.html#configuration-variables)*",
              "key": "Optional",
              "type": "trigger"
            },
            "on_wake": {
              "docs": "**, [Action](https://esphome.io/automations/actions.html#config-action)**: An action to be performed when the Nextion wakes up. See [Nextion Automation](https://esphome.io/components/display/nextion.html#nextion-on-sleep).\n\n*See also: [Nextion TFT LCD Display](https://esphome.io/components/display/nextion.html#configuration-variables)*",
              "key": "Optional",
              "type": "trigger"
            },
            "skip_connection_handshake": {
              "default": "False",
              "docs": "**, boolean**: Sets whether the initial display connection handshake process is skipped. When set to `true`, the connection will be established without performing the handshake. This can be useful when using Nextion Simulator. Defaults to `false`.\n\n*See also: [Nextion TFT LCD Display](https://esphome.io/components/display/nextion.html#configuration-variables)*",
              "key": "Optional",
              "type": "boolean"
            },
            "start_up_page": {
              "data_type": "uint8_t",
              "docs": "**, int**: Sets the page to display when ESPHome connects to the Nextion. (The Nextion will display page 0 upon start-up by default).\n\n*See also: [Nextion TFT LCD Display](https://esphome.io/components/display/nextion.html#configuration-variables)*",
              "key": "Optional",
              "type": "integer"
            },
            "tft_url": {
              "docs": "**, string**: The URL from which to download the TFT file for display firmware updates (Nextion OTA). See [Nextion Upload](https://esphome.io/components/display/nextion.html#nextion-upload-tft).\n\n*See also: [Nextion TFT LCD Display](https://esphome.io/components/display/nextion.html#configuration-variables)*",
              "key": "Optional"
            },
            "touch_sleep_timeout": {
              "docs": "**, int**: Sets internal No-touch-then-sleep timer in seconds.\n\n*See also: [Nextion TFT LCD Display](https://esphome.io/components/display/nextion.html#configuration-variables)*",
              "key": "Optional",
              "type": "integer"
            },
            "uart_id": {
              "docs": "**, [ID](https://esphome.io/guides/configuration-types.html#config-id)**: The ID of the [UART Bus](https://esphome.io/components/uart.html#uart) you wish to use for this display. Specify this when you have multiple UART configurations.\n\n*See also: [Nextion TFT LCD Display](https://esphome.io/components/display/nextion.html#configuration-variables)*",
              "key": "GeneratedID",
              "type": "use_id",
              "use_id_type": "uart::UARTComponent"
            },
            "update_interval": {
              "default": "5s",
              "docs": "**, [Time](https://esphome.io/guides/configuration-types.html#config-time)**: The interval to call the lambda to update the display. Defaults to `5s`.\n\n*See also: [Nextion TFT LCD Display](https://esphome.io/components/display/nextion.html#configuration-variables)*"
            },
            "wake_up_page": {
              "data_type": "uint8_t",
              "docs": "**, int**: Sets the page to display after waking up.\n\n*See also: [Nextion TFT LCD Display](https://esphome.io/components/display/nextion.html#configuration-variables)*",
              "key": "Optional",
              "type": "integer"
            }
          },
          "extends": [
            "core.COMPONENT_SCHEMA",
            "display.BASIC_DISPLAY_SCHEMA"
          ]
        },
        "type": "schema"
      }
    }
  },
  "nextion.sensor": {
    "action": {
      "publish": {
        "docs": "You can also publish a state to a Nextion sensor from elsewhere in your YAML file with the `sensor.nextion.publish` action.\n\n*See also: [`sensor.nextion.publish` Action](https://esphome.io/components/sensor/nextion.html#sensor-nextion-publish-action)*",
        "schema": {
          "config_vars": {
            "id": {
              "docs": "**, [ID](https://esphome.io/guides/configuration-types.html#config-id)**: The ID of the Nextion sensor.\n\n*See also: [Nextion Sensor Component](https://esphome.io/components/sensor/nextion.html#sensor-nextion-publish-action)*",
              "key": "Required",
              "type": "use_id",
              "use_id_type": "nextion::NextionSensor"
            },
            "publish_state": {
              "default": "true",
              "docs": "**, bool, [templatable](https://esphome.io/automations/templates.html#config-templatable)**: Publish new state to Home Assistant. Default is true.\n\n*See also: [Nextion Sensor Component](https://esphome.io/components/sensor/nextion.html#sensor-nextion-publish-action)*",
              "key": "Optional",
              "templatable": true,
              "type": "boolean"
            },
            "send_to_nextion": {
              "default": "true",
              "docs": "**, bool, [templatable](https://esphome.io/automations/templates.html#config-templatable)**: Publish new state to Nextion display which will update component. Default is true.\n\n*See also: [Nextion Sensor Component](https://esphome.io/components/sensor/nextion.html#sensor-nextion-publish-action)*",
              "key": "Optional",
              "templatable": true,
              "type": "boolean"
            },
            "state": {
              "docs": "**, string, [templatable](https://esphome.io/automations/templates.html#config-templatable)**: The float state to publish.\n\n*See also: [Nextion Sensor Component](https://esphome.io/components/sensor/nextion.html#sensor-nextion-publish-action)*",
              "key": "Required",
              "templatable": true
            }
          }
        },
        "type": "schema"
      }
    },
    "schemas": {
      "CONFIG_SCHEMA": {
        "schema": {
          "config_vars": {
            "accuracy_decimals": {
              "default": "2"
            },
            "component_id": {
              "data_type": "uint8_t",
              "key": "Optional",
              "type": "integer"
            },
            "id": {
              "id_type": {
                "class": "nextion::NextionSensor",
                "parents": [
                  "Component",
                  "EntityBase",
                  "PollingComponent",
                  "sensor::Sensor"
                ]
              }
            },
            "precision": {
              "default": "0",
              "docs": "**, int**: This is for Nextion float components. This sets the precision that the component is set to. This typically is the `vvs1` setting of the component.\n\n*See also: [Nextion Sensor Component](https://esphome.io/components/sensor/nextion.html#configuration-variables)*",
              "key": "Optional",
              "type": "integer"
            },
            "update_interval": {
              "default": "never",
              "docs": "**, [Time](https://esphome.io/guides/configuration-types.html#config-time)**: The duration to update the sensor\n\n*See also: [Nextion Sensor Component](https://esphome.io/components/sensor/nextion.html#configuration-variables)*",
              "key": "Optional"
            },
            "wave_channel_id": {
              "key": "Optional"
            },
            "wave_max_length": {
              "default": "255",
              "key": "Optional",
              "type": "integer"
            },
            "wave_max_value": {
              "default": "100",
              "key": "Optional",
              "type": "integer"
            },
            "waveform_send_last_value": {
              "default": "True",
              "key": "Optional",
              "type": "boolean"
            }
          },
          "extends": [
            "core.COMPONENT_SCHEMA",
            "nextion.sensor.CONFIG_SENSOR_COMPONENT_SCHEMA",
            "sensor.SENSOR_SCHEMA"
          ]
        },
        "type": "schema"
      },
      "CONFIG_SENSOR_COMPONENT_SCHEMA": {
        "schema": {
          "config_vars": {
            "font_id": {
              "key": "Optional",
              "type": "integer"
            }
          },
          "extends": [
            "nextion.binary_sensor.CONFIG_BINARY_SENSOR_SCHEMA"
          ]
        },
        "type": "schema"
      }
    }
  },
  "nextion.switch": {
    "action": {
      "publish": {
        "docs": "You can also publish a state to a Nextion switch from elsewhere in your YAML file with the `switch.nextion.publish` action.\n\n*See also: [`switch.nextion.publish` Action](https://esphome.io/components/switch/nextion.html#switch-nextion-publish-action)*",
        "schema": {
          "config_vars": {
            "id": {
              "docs": "**, [ID](https://esphome.io/guides/configuration-types.html#config-id)**: The ID of the Nextion switch.\n\n*See also: [Nextion Switch Component](https://esphome.io/components/switch/nextion.html#switch-nextion-publish-action)*",
              "key": "Required",
              "type": "use_id",
              "use_id_type": "nextion::NextionSwitch"
            },
            "publish_state": {
              "default": "true",
              "docs": "**, bool, [templatable](https://esphome.io/automations/templates.html#config-templatable)**: Publish new state to Home Assistant. Default is true.\n\n*See also: [Nextion Switch Component](https://esphome.io/components/switch/nextion.html#switch-nextion-publish-action)*",
              "key": "Optional",
              "templatable": true,
              "type": "boolean"
            },
            "send_to_nextion": {
              "default": "true",
              "docs": "**, bool, [templatable](https://esphome.io/automations/templates.html#config-templatable)**: Publish new state to Nextion display which will update component. Default is true.\n\n*See also: [Nextion Switch Component](https://esphome.io/components/switch/nextion.html#switch-nextion-publish-action)*",
              "key": "Optional",
              "templatable": true,
              "type": "boolean"
            },
            "state": {
              "docs": "**, string, [templatable](https://esphome.io/automations/templates.html#config-templatable)**: The boolean state to publish.\n\n*See also: [Nextion Switch Component](https://esphome.io/components/switch/nextion.html#switch-nextion-publish-action)*",
              "key": "Required",
              "templatable": true,
              "type": "boolean"
            }
          }
        },
        "type": "schema"
      }
    },
    "schemas": {
      "CONFIG_SCHEMA": {
        "schema": {
          "config_vars": {
            "background_pressed_color": {
              "docs": "**, [Color](https://esphome.io/components/display/index.html#config-color)**: The background color when pressed\n\n*See also: [Nextion Switch Component](https://esphome.io/components/switch/nextion.html#configuration-variables)*",
              "key": "Optional",
              "type": "use_id",
              "use_id_type": "Color"
            },
            "foreground_pressed_color": {
              "docs": "**, [Color](https://esphome.io/components/display/index.html#config-color)**: The foreground color when pressed\n\n*See also: [Nextion Switch Component](https://esphome.io/components/switch/nextion.html#configuration-variables)*",
              "key": "Optional",
              "type": "use_id",
              "use_id_type": "Color"
            },
            "id": {
              "id_type": {
                "class": "nextion::NextionSwitch",
                "parents": [
                  "Component",
                  "EntityBase",
                  "PollingComponent",
                  "switch_::Switch"
                ]
              },
              "key": "GeneratedID"
            },
            "restore_mode": {
              "default": "ALWAYS_OFF",
              "key": "Optional",
              "type": "enum",
              "values": {
                "ALWAYS_OFF": null,
                "ALWAYS_ON": null,
                "DISABLED": null,
                "RESTORE_DEFAULT_OFF": null,
                "RESTORE_DEFAULT_ON": null,
                "RESTORE_INVERTED_DEFAULT_OFF": null,
                "RESTORE_INVERTED_DEFAULT_ON": null
              }
            },
            "update_interval": {
              "default": "never",
              "docs": "**, [Time](https://esphome.io/guides/configuration-types.html#config-time)**: The duration to update the sensor. If using a [Nextion Custom Switch Protocol](https://esphome.io/components/switch/nextion.html#nextion-custom-switch-protocol) this should not be used\n\n*See also: [Nextion Switch Component](https://esphome.io/components/switch/nextion.html#configuration-variables)*",
              "key": "Optional"
            }
          },
          "extends": [
            "nextion.sensor.CONFIG_SENSOR_COMPONENT_SCHEMA"
          ]
        },
        "type": "schema"
      }
    }
  },
  "nextion.text_sensor": {
    "action": {
      "publish": {
        "docs": "You can also publish a state to a Nextion text sensor from elsewhere in your YAML file with the `text_sensor.nextion.publish` action.\n\n*See also: [`text_sensor.nextion.publish` Action](https://esphome.io/components/text_sensor/nextion.html#text-sensor-nextion-publish-action)*",
        "schema": {
          "config_vars": {
            "id": {
              "docs": "**, [ID](https://esphome.io/guides/configuration-types.html#config-id)**: The ID of the Nextion text sensor.\n\n*See also: [Nextion Text Sensor Component](https://esphome.io/components/text_sensor/nextion.html#text-sensor-nextion-publish-action)*",
              "key": "Required",
              "type": "use_id",
              "use_id_type": "nextion::NextionTextSensor"
            },
            "publish_state": {
              "default": "true",
              "docs": "**, bool, [templatable](https://esphome.io/automations/templates.html#config-templatable)**: Publish new state to Home Assistant. Default is true.\n\n*See also: [Nextion Text Sensor Component](https://esphome.io/components/text_sensor/nextion.html#text-sensor-nextion-publish-action)*",
              "key": "Optional",
              "templatable": true,
              "type": "boolean"
            },
            "send_to_nextion": {
              "default": "true",
              "docs": "**, bool, [templatable](https://esphome.io/automations/templates.html#config-templatable)**: Publish new state to Nextion display which will update component. Default is true.\n\n*See also: [Nextion Text Sensor Component](https://esphome.io/components/text_sensor/nextion.html#text-sensor-nextion-publish-action)*",
              "key": "Optional",
              "templatable": true,
              "type": "boolean"
            },
            "state": {
              "docs": "**, string, [templatable](https://esphome.io/automations/templates.html#config-templatable)**: The string to publish.\n\n*See also: [Nextion Text Sensor Component](https://esphome.io/components/text_sensor/nextion.html#text-sensor-nextion-publish-action)*",
              "key": "Required",
              "templatable": true,
              "type": "string"
            }
          }
        },
        "type": "schema"
      }
    },
    "schemas": {
      "CONFIG_SCHEMA": {
        "schema": {
          "config_vars": {
            "background_color": {
              "docs": "**, [Color](https://esphome.io/components/display/index.html#config-color)**: The background color\n\n*See also: [Nextion Text Sensor Component](https://esphome.io/components/text_sensor/nextion.html#configuration-variables)*",
              "key": "Optional",
              "type": "use_id",
              "use_id_type": "Color"
            },
            "component_name": {
              "docs": "**, string**: The name of the Nextion component.\n\n*See also: [Nextion Text Sensor Component](https://esphome.io/components/text_sensor/nextion.html#configuration-variables)*",
              "key": "Required"
            },
            "font_id": {
              "docs": "**, int**: The font id for the component\n\n*See also: [Nextion Text Sensor Component](https://esphome.io/components/text_sensor/nextion.html#configuration-variables)*",
              "key": "Optional",
              "type": "integer"
            },
            "foreground_color": {
              "docs": "**, [Color](https://esphome.io/components/display/index.html#config-color)**: The foreground color\n\n*See also: [Nextion Text Sensor Component](https://esphome.io/components/text_sensor/nextion.html#configuration-variables)*",
              "key": "Optional",
              "type": "use_id",
              "use_id_type": "Color"
            },
            "id": {
              "id_type": {
                "class": "nextion::NextionTextSensor",
                "parents": [
                  "Component",
                  "EntityBase",
                  "PollingComponent",
                  "text_sensor::TextSensor"
                ]
              }
            },
            "nextion_id": {
              "docs": "**, [ID](https://esphome.io/guides/configuration-types.html#config-id)**: The ID of the Nextion display.\n\n*See also: [Nextion Text Sensor Component](https://esphome.io/components/text_sensor/nextion.html#configuration-variables)*",
              "key": "GeneratedID",
              "type": "use_id",
              "use_id_type": "nextion::Nextion"
            },
            "update_interval": {
              "default": "never",
              "docs": "**, [Time](https://esphome.io/guides/configuration-types.html#config-time)**: The duration to update the sensor. If using a [Nextion Custom Text Sensor Protocol](https://esphome.io/components/text_sensor/nextion.html#nextion-custom-text-sensor-protocol) this should not be used\n\n*See also: [Nextion Text Sensor Component](https://esphome.io/components/text_sensor/nextion.html#configuration-variables)*",
              "key": "Optional"
            },
            "visible": {
              "default": "True",
              "docs": "**, boolean**: Visible or not\n\n*See also: [Nextion Text Sensor Component](https://esphome.io/components/text_sensor/nextion.html#configuration-variables)*",
              "key": "Optional",
              "type": "boolean"
            }
          }
        },
        "type": "schema"
      }
    }
  }
}