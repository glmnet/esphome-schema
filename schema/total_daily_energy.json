{
  "total_daily_energy.sensor": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "schema": {
          "config_vars": {
            "device_class": {
              "default": "energy"
            },
            "id": {
              "id_type": {
                "class": "total_daily_energy::TotalDailyEnergy",
                "parents": [
                  "Component",
                  "EntityBase",
                  "sensor::Sensor"
                ]
              }
            },
            "method": {
              "default": "right",
              "docs": "**, string**: The method to use for calculating the total daily energy. One of `trapezoid`, `left` or `right`. Defaults to `right`.\n\n*See also: [Total Daily Energy Sensor](https://esphome.io/components/sensor/total_daily_energy.html#configuration-variables)*",
              "key": "Optional",
              "type": "enum",
              "values": {
                "left": null,
                "right": null,
                "trapezoid": null
              }
            },
            "power_id": {
              "docs": "**, [ID](https://esphome.io/guides/configuration-types.html#config-id)**: The ID of the power sensor to integrate over time.\n\n*See also: [Total Daily Energy Sensor](https://esphome.io/components/sensor/total_daily_energy.html#configuration-variables)*",
              "key": "Required",
              "type": "use_id",
              "use_id_type": "sensor::Sensor"
            },
            "restore": {
              "default": "True",
              "docs": "**, boolean**: Whether to store the intermediate result on the device so that the value can be restored upon power cycle or reboot. Defaults to `true`.\n\n*See also: [Total Daily Energy Sensor](https://esphome.io/components/sensor/total_daily_energy.html#configuration-variables)*",
              "key": "Optional",
              "type": "boolean"
            },
            "state_class": {
              "default": "total_increasing"
            },
            "time_id": {
              "key": "GeneratedID",
              "type": "use_id",
              "use_id_type": "time::RealTimeClock"
            }
          },
          "extends": [
            "core.COMPONENT_SCHEMA",
            "sensor.SENSOR_SCHEMA"
          ]
        },
        "type": "schema"
      }
    }
  }
}