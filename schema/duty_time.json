{
  "duty_time.sensor": {
    "action": {
      "reset": {
        "docs": "This action resets the duty time counter. Causes a sensor update. Does not affect the `last_time` sensor. In lambdas, you may use the `reset()` method.\n\n*See also: [`sensor.duty_time.reset` Action](https://esphome.io/components/sensor/duty_time.html#sensor-duty-time-reset-action)*",
        "schema": {
          "extends": [
            "duty_time.sensor.DUTY_TIME_ID_SCHEMA"
          ]
        },
        "type": "schema"
      },
      "start": {
        "docs": "This action starts/resume time tracking. In lambdas, you may use the `start()` method.\n\n*See also: [`sensor.duty_time.start` Action](https://esphome.io/components/sensor/duty_time.html#sensor-duty-time-start-action)*",
        "schema": {
          "extends": [
            "duty_time.sensor.DUTY_TIME_ID_SCHEMA"
          ]
        },
        "type": "schema"
      },
      "stop": {
        "docs": "This action suspends time tracking. Causes the sensor to be updated, including the `last_time` sensor. In lambdas, you may use the `stop()` method.\n\n*See also: [`sensor.duty_time.stop` Action](https://esphome.io/components/sensor/duty_time.html#sensor-duty-time-stop-action)*",
        "schema": {
          "extends": [
            "duty_time.sensor.DUTY_TIME_ID_SCHEMA"
          ]
        },
        "type": "schema"
      }
    },
    "condition": {
      "is_not_running": {
        "schema": {
          "extends": [
            "duty_time.sensor.DUTY_TIME_ID_SCHEMA"
          ]
        },
        "type": "schema"
      },
      "is_running": {
        "schema": {
          "extends": [
            "duty_time.sensor.DUTY_TIME_ID_SCHEMA"
          ]
        },
        "type": "schema"
      }
    },
    "schemas": {
      "CONFIG_SCHEMA": {
        "schema": {
          "config_vars": {
            "accuracy_decimals": {
              "default": "3"
            },
            "device_class": {
              "default": "duration"
            },
            "entity_category": {
              "default": "diagnostic"
            },
            "icon": {
              "default": "mdi:timer-play-outline"
            },
            "id": {
              "docs": "**, [ID](https://esphome.io/guides/configuration-types.html#config-id)**: Set the ID of this sensor for use in lambdas.\n\n*See also: [Duty Time](https://esphome.io/components/sensor/duty_time.html#configuration-variables)*",
              "id_type": {
                "class": "duty_time_sensor::DutyTimeSensor",
                "parents": [
                  "Component",
                  "EntityBase",
                  "PollingComponent",
                  "sensor::Sensor"
                ]
              }
            },
            "lambda": {
              "docs": "**, [lambda](https://esphome.io/automations/templates.html#config-lambda)**: Lambda that will be called in a loop to get the current state of the tracked object. *May not be used with* `sensor`.\n\n*See also: [Duty Time](https://esphome.io/components/sensor/duty_time.html#configuration-variables)*",
              "key": "Optional"
            },
            "last_time": {
              "docs": "Information of the last switch-on time sensor. All options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n\n*See also: [Duty Time](https://esphome.io/components/sensor/duty_time.html#configuration-variables)*",
              "key": "Optional",
              "schema": {
                "config_vars": {
                  "accuracy_decimals": {
                    "default": "3"
                  },
                  "device_class": {
                    "default": "duration"
                  },
                  "entity_category": {
                    "default": "diagnostic"
                  },
                  "icon": {
                    "default": "mdi:timer-marker-outline"
                  },
                  "state_class": {
                    "default": "total"
                  },
                  "unit_of_measurement": {
                    "default": "s"
                  }
                },
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ]
              },
              "type": "schema"
            },
            "restore": {
              "default": "False",
              "docs": "**, boolean**: Whether to store the intermediate result on the device so that the value can be restored upon power cycle or reboot. Warning: this option can wear out your flash. Defaults to `false`.\n\n*See also: [Duty Time](https://esphome.io/components/sensor/duty_time.html#configuration-variables)*",
              "key": "Optional",
              "type": "boolean"
            },
            "sensor": {
              "docs": "**, [ID](https://esphome.io/guides/configuration-types.html#config-id)**: The ID of the `binary_sensor` to track the duty time. *May not be used with* `lambda`.\n\n*See also: [Duty Time](https://esphome.io/components/sensor/duty_time.html#configuration-variables)*",
              "key": "Optional",
              "type": "use_id",
              "use_id_type": "binary_sensor::BinarySensor"
            },
            "state_class": {
              "default": "total_increasing"
            },
            "unit_of_measurement": {
              "default": "s"
            },
            "update_interval": {
              "default": "60s",
              "docs": "**, [Time](https://esphome.io/guides/configuration-types.html#config-time)**: The update interval. Defaults to `60s`.\n\n*See also: [Duty Time](https://esphome.io/components/sensor/duty_time.html#configuration-variables)*",
              "key": "Optional"
            }
          },
          "extends": [
            "core.COMPONENT_SCHEMA",
            "sensor.SENSOR_SCHEMA"
          ]
        },
        "type": "schema"
      },
      "DUTY_TIME_ID_SCHEMA": {
        "maybe": "id",
        "schema": {
          "config_vars": {
            "id": {
              "key": "Required",
              "type": "use_id",
              "use_id_type": "duty_time_sensor::DutyTimeSensor"
            }
          }
        },
        "type": "schema"
      }
    }
  }
}