{
  "mcp3204": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "is_list": true,
        "schema": {
          "config_vars": {
            "cs_pin": {
              "docs": "**, [Pin Schema](https://esphome.io/guides/configuration-types.html#config-pin-schema)**: The SPI cable select pin to use.\n\n*See also: [mcp3204 Component/Hub](https://esphome.io/components/sensor/mcp3204.html#configuration-variables)*",
              "key": "Required",
              "modes": [
                "output"
              ],
              "schema": true,
              "type": "pin"
            },
            "data_rate": {
              "key": "Optional",
              "type": "enum",
              "values": {
                "1000.0": null,
                "1000000.0": null,
                "10000000.0": null,
                "200000.0": null,
                "2000000.0": null,
                "20000000.0": null,
                "4000000.0": null,
                "40000000.0": null,
                "5000000.0": null,
                "75000.0": null,
                "8000000.0": null,
                "80000000.0": null
              }
            },
            "id": {
              "docs": "**, [ID](https://esphome.io/guides/configuration-types.html#config-id)**: The id to use for this MCP3204 component.\n\n*See also: [mcp3204 Component/Hub](https://esphome.io/components/sensor/mcp3204.html#configuration-variables)*",
              "id_type": {
                "class": "mcp3204::MCP3204",
                "parents": [
                  "Component",
                  "spi::SPIDevice"
                ]
              },
              "key": "GeneratedID"
            },
            "reference_voltage": {
              "default": "3.3V",
              "docs": "**, float**: The reference voltage. Defaults to `3.3V`.\n\n*See also: [mcp3204 Component/Hub](https://esphome.io/components/sensor/mcp3204.html#configuration-variables)*",
              "key": "Optional"
            },
            "spi_id": {
              "key": "GeneratedID",
              "type": "use_id",
              "use_id_type": "spi::SPIComponent"
            },
            "spi_mode": {
              "key": "Optional",
              "type": "enum",
              "values": {
                "0": null,
                "1": null,
                "2": null,
                "3": null,
                "MODE0": null,
                "MODE1": null,
                "MODE2": null,
                "MODE3": null
              }
            }
          }
        },
        "type": "schema"
      }
    }
  },
  "mcp3204.sensor": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "schema": {
          "config_vars": {
            "id": {
              "id_type": {
                "class": "mcp3204::MCP3204Sensor",
                "parents": [
                  "Component",
                  "EntityBase",
                  "PollingComponent",
                  "sensor::Sensor",
                  "voltage_sampler::VoltageSampler"
                ]
              }
            },
            "mcp3204_id": {
              "docs": "**, [ID](https://esphome.io/guides/configuration-types.html#config-id)**: The id of the parent MCP3204 component.\n\n*See also: [mcp3204 Sensor](https://esphome.io/components/sensor/mcp3204.html#id1)*",
              "key": "GeneratedID",
              "type": "use_id",
              "use_id_type": "mcp3204::MCP3204"
            },
            "number": {
              "docs": "**, int**: The pin number of the MCP3204\n\n*See also: [mcp3204 Sensor](https://esphome.io/components/sensor/mcp3204.html#id1)*",
              "key": "Required",
              "type": "integer"
            },
            "update_interval": {
              "default": "60s",
              "docs": "**, [Time](https://esphome.io/guides/configuration-types.html#config-time)**: The interval to check the sensor. Defaults to `60s`.\n\n*See also: [mcp3204 Sensor](https://esphome.io/components/sensor/mcp3204.html#id1)*",
              "key": "Optional"
            }
          },
          "extends": [
            "core.COMPONENT_SCHEMA",
            "sensor.SENSOR_SCHEMA"
          ]
        },
        "type": "schema"
      }
    }
  }
}