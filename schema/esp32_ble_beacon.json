{
  "esp32_ble_beacon": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "schema": {
          "config_vars": {
            "ble_id": {
              "key": "GeneratedID",
              "type": "use_id",
              "use_id_type": "esp32_ble::ESP32BLE"
            },
            "id": {
              "docs": "**, [ID](https://esphome.io/guides/configuration-types.html#config-id)**: Manually specify the ID for code generation.\n\n*See also: [ESP32 Bluetooth Low Energy Beacon](https://esphome.io/components/esp32_ble_beacon.html#configuration-variables)*",
              "id_type": {
                "class": "esp32_ble_beacon::ESP32BLEBeacon",
                "parents": [
                  "Component",
                  "Parented",
                  "Parented<esp32_ble::ESP32BLE>",
                  "esp32_ble::GAPEventHandler"
                ]
              },
              "key": "GeneratedID"
            },
            "major": {
              "data_type": "uint16_t",
              "default": "10167",
              "docs": "**, int**: The iBeacon major identifier of this beacon. Usually used to group beacons, for example for grouping all beacons in the same building, but has no effect if the BLE receiver doesn\u2019t use it. Defaults to `10167`.\n\n*See also: [ESP32 Bluetooth Low Energy Beacon](https://esphome.io/components/esp32_ble_beacon.html#configuration-variables)*",
              "key": "Optional",
              "type": "integer"
            },
            "max_interval": {
              "default": "100ms",
              "docs": "**, [Time](https://esphome.io/guides/configuration-types.html#config-time)**: The iBeacon maximum transmit interval in milliseconds from 20 to 10240. Setting this greater than `min_interval` gives the BLE hardware a better chance to avoid collisions with other BLE transmissions. Defaults to the iBeacon specification\u2019s defined interval: `100ms`.\n\n*See also: [ESP32 Bluetooth Low Energy Beacon](https://esphome.io/components/esp32_ble_beacon.html#configuration-variables)*",
              "key": "Optional",
              "schema": {
                "extends": [
                  "core.positive_time_period_milliseconds"
                ]
              },
              "type": "schema"
            },
            "measured_power": {
              "default": "-59",
              "docs": "**, int**: The RSSI of the iBeacon as measured 1 meter from the device. This is used to calibrate the ranging calculations in iOS. The procedure for setting this value can be found in Apple\u2019s [Getting Started with iBeacon PDF](https://developer.apple.com/ibeacon/Getting-Started-with-iBeacon.pdf) under the heading *Calibrating iBeacon*. Between -128 to 0. Defaults to `-59`.\n\n*See also: [ESP32 Bluetooth Low Energy Beacon](https://esphome.io/components/esp32_ble_beacon.html#configuration-variables)*",
              "key": "Optional",
              "type": "integer"
            },
            "min_interval": {
              "default": "100ms",
              "docs": "**, [Time](https://esphome.io/guides/configuration-types.html#config-time)**: The iBeacon minimum transmit interval in milliseconds from 20 to 10240. Setting this less than `max_interval` gives the BLE hardware a better chance to avoid collisions with other BLE transmissions. Defaults to the iBeacon specification\u2019s defined interval: `100ms`.\n\n*See also: [ESP32 Bluetooth Low Energy Beacon](https://esphome.io/components/esp32_ble_beacon.html#configuration-variables)*",
              "key": "Optional",
              "schema": {
                "extends": [
                  "core.positive_time_period_milliseconds"
                ]
              },
              "type": "schema"
            },
            "minor": {
              "data_type": "uint16_t",
              "default": "61958",
              "docs": "**, int**: The iBeacon minor identifier of this beacon. Usually used to identify beacons within an iBeacon group. Defaults to `61958`.\n\n*See also: [ESP32 Bluetooth Low Energy Beacon](https://esphome.io/components/esp32_ble_beacon.html#configuration-variables)*",
              "key": "Optional",
              "type": "integer"
            },
            "tx_power": {
              "default": "3dBm",
              "docs": "**, int**: The transmit power of the iBeacon in dBm. One of -12, -9, -6, -3, 0, 3, 6, 9. Defaults to `3dBm`.\n\n*See also: [ESP32 Bluetooth Low Energy Beacon](https://esphome.io/components/esp32_ble_beacon.html#configuration-variables)*",
              "key": "Optional",
              "type": "enum",
              "values": {
                "-12": null,
                "-3": null,
                "-6": null,
                "-9": null,
                "0": null,
                "3": null,
                "6": null,
                "9": null
              }
            },
            "type": {
              "docs": "The type of beacon to create, currently only supports `iBeacon`.\n\n*See also: [ESP32 Bluetooth Low Energy Beacon](https://esphome.io/components/esp32_ble_beacon.html#configuration-variables)*",
              "key": "Required",
              "type": "enum",
              "values": {
                "IBEACON": null
              }
            },
            "uuid": {
              "docs": "The [universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier) to identify the beacon.\n\n*See also: [ESP32 Bluetooth Low Energy Beacon](https://esphome.io/components/esp32_ble_beacon.html#configuration-variables)*",
              "key": "Required"
            }
          },
          "extends": [
            "core.COMPONENT_SCHEMA"
          ]
        },
        "type": "schema"
      }
    }
  }
}