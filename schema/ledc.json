{
  "ledc.output": {
    "action": {
      "set_frequency": {
        "docs": "This [Action](https://esphome.io/automations/actions.html#config-action) allows you to manually change the frequency of an LEDC channel at runtime. Use cases include controlling a passive buzzer (for pitch control).\n\n*See also: [`output.ledc.set_frequency` Action](https://esphome.io/components/output/ledc.html#output-ledc-set-frequency-action)*",
        "schema": {
          "config_vars": {
            "frequency": {
              "docs": "**, [templatable](https://esphome.io/automations/templates.html#config-templatable), float**: The frequency to set in hertz.\n\n*See also: [ESP32 LEDC Output](https://esphome.io/components/output/ledc.html#output-ledc-set-frequency-action)*",
              "key": "Required",
              "templatable": true
            },
            "id": {
              "docs": "**, [ID](https://esphome.io/guides/configuration-types.html#config-id)**: The ID of the LEDC output to change.\n\n*See also: [ESP32 LEDC Output](https://esphome.io/components/output/ledc.html#output-ledc-set-frequency-action)*",
              "key": "Required",
              "type": "use_id",
              "use_id_type": "ledc::LEDCOutput"
            }
          }
        },
        "type": "schema"
      }
    },
    "schemas": {
      "CONFIG_SCHEMA": {
        "schema": {
          "config_vars": {
            "channel": {
              "docs": "**, int**: Manually set the [LEDC channel](https://docs.espressif.com/projects/esp-idf/en/latest/api-reference/peripherals/ledc.html#configure-channel) to use. Two adjacent channels share the same timer. Defaults to an automatic selection.\n\n*See also: [ESP32 LEDC Output](https://esphome.io/components/output/ledc.html#configuration-variables)*",
              "key": "Optional",
              "type": "integer"
            },
            "frequency": {
              "default": "1kHz",
              "docs": "**, float**: At which frequency to run the LEDC channel\u2019s timer. Defaults to 1000Hz.\n\n*See also: [ESP32 LEDC Output](https://esphome.io/components/output/ledc.html#configuration-variables)*",
              "key": "Optional"
            },
            "id": {
              "docs": "**, [ID](https://esphome.io/guides/configuration-types.html#config-id)**: The id to use for this output component.\n\n*See also: [ESP32 LEDC Output](https://esphome.io/components/output/ledc.html#configuration-variables)*",
              "id_type": {
                "class": "ledc::LEDCOutput",
                "parents": [
                  "Component",
                  "output::BinaryOutput",
                  "output::FloatOutput"
                ]
              },
              "key": "Required"
            },
            "phase_angle": {
              "docs": "**, float**: Set a phase angle to the other channel of this timer. Range 0-360\u00b0, defaults to 0\u00b0\n\n*See also: [ESP32 LEDC Output](https://esphome.io/components/output/ledc.html#configuration-variables)*",
              "key": "Optional"
            },
            "pin": {
              "docs": "**, [Pin](https://esphome.io/guides/configuration-types.html#config-pin)**: The pin to use LEDC on. Can only be GPIO0-GPIO33.\n\n*See also: [ESP32 LEDC Output](https://esphome.io/components/output/ledc.html#configuration-variables)*",
              "internal": true,
              "key": "Required",
              "modes": [
                "output"
              ],
              "schema": true,
              "type": "pin"
            }
          },
          "extends": [
            "core.COMPONENT_SCHEMA",
            "output.FLOAT_OUTPUT_SCHEMA"
          ]
        },
        "type": "schema"
      }
    }
  }
}