{
  "gps": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "is_list": true,
        "schema": {
          "config_vars": {
            "altitude": {
              "docs": "Include the measured altitude as a sensor\n  * All options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n  \n  \n\n*See also: [GPS Component](https://esphome.io/components/gps.html#configuration-variables)*",
              "key": "Optional",
              "schema": {
                "config_vars": {
                  "accuracy_decimals": {
                    "default": "1"
                  },
                  "unit_of_measurement": {
                    "default": "m"
                  }
                },
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ]
              },
              "type": "schema"
            },
            "course": {
              "docs": "Include the measured course as a sensor\n  * All options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n  \n  \n\n*See also: [GPS Component](https://esphome.io/components/gps.html#configuration-variables)*",
              "key": "Optional",
              "schema": {
                "config_vars": {
                  "accuracy_decimals": {
                    "default": "2"
                  },
                  "unit_of_measurement": {
                    "default": "\u00b0"
                  }
                },
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ]
              },
              "type": "schema"
            },
            "id": {
              "id_type": {
                "class": "gps::GPS",
                "parents": [
                  "Component",
                  "uart::UARTDevice"
                ]
              },
              "key": "GeneratedID"
            },
            "latitude": {
              "docs": "Include the Latitude as a sensor\n  * All options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n  \n  \n\n*See also: [GPS Component](https://esphome.io/components/gps.html#configuration-variables)*",
              "key": "Optional",
              "schema": {
                "config_vars": {
                  "accuracy_decimals": {
                    "default": "6"
                  },
                  "unit_of_measurement": {
                    "default": "\u00b0"
                  }
                },
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ]
              },
              "type": "schema"
            },
            "longitude": {
              "docs": "Include the Longitude as a sensor\n  * All options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n  \n  \n\n*See also: [GPS Component](https://esphome.io/components/gps.html#configuration-variables)*",
              "key": "Optional",
              "schema": {
                "config_vars": {
                  "accuracy_decimals": {
                    "default": "6"
                  },
                  "unit_of_measurement": {
                    "default": "\u00b0"
                  }
                },
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ]
              },
              "type": "schema"
            },
            "satellites": {
              "docs": "Include the number of tracking satellites being used as a sensor\n  * All options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n  \n  \n\n*See also: [GPS Component](https://esphome.io/components/gps.html#configuration-variables)*",
              "key": "Optional",
              "schema": {
                "config_vars": {
                  "accuracy_decimals": {
                    "default": "0"
                  },
                  "state_class": {
                    "default": "measurement"
                  }
                },
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ]
              },
              "type": "schema"
            },
            "speed": {
              "docs": "Include the measured speed as a sensor\n  * All options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n  \n  \n\n*See also: [GPS Component](https://esphome.io/components/gps.html#configuration-variables)*",
              "key": "Optional",
              "schema": {
                "config_vars": {
                  "accuracy_decimals": {
                    "default": "6"
                  },
                  "unit_of_measurement": {
                    "default": "km/h"
                  }
                },
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ]
              },
              "type": "schema"
            },
            "uart_id": {
              "key": "GeneratedID",
              "type": "use_id",
              "use_id_type": "uart::UARTComponent"
            },
            "update_interval": {
              "default": "20s",
              "key": "Optional"
            }
          },
          "extends": [
            "core.COMPONENT_SCHEMA"
          ]
        },
        "type": "schema"
      }
    }
  },
  "gps.time": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "schema": {
          "config_vars": {
            "gps_id": {
              "key": "GeneratedID",
              "type": "use_id",
              "use_id_type": "gps::GPS"
            },
            "id": {
              "id_type": {
                "class": "gps::GPSTime",
                "parents": [
                  "Component",
                  "Component",
                  "PollingComponent",
                  "PollingComponent",
                  "gps::GPSListener",
                  "time::RealTimeClock"
                ]
              },
              "key": "GeneratedID"
            },
            "update_interval": {
              "default": "5min"
            }
          },
          "extends": [
            "core.COMPONENT_SCHEMA",
            "time.TIME_SCHEMA"
          ]
        },
        "type": "schema"
      }
    }
  }
}