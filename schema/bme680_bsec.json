{
  "bme680_bsec": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "is_list": true,
        "schema": {
          "config_vars": {
            "address": {
              "data_type": "hex_uint8_t",
              "default": "118",
              "docs": "**, int**: Manually specify the I\u00b2C address of the sensor. Defaults to `0x76`. Another address can be `0x77`.\n\n*See also: [bme680_bsec Component/Hub](https://esphome.io/components/sensor/bme680_bsec.html#component-hub)*",
              "key": "Optional"
            },
            "i2c_id": {
              "key": "GeneratedID",
              "type": "use_id",
              "use_id_type": "i2c::I2CBus"
            },
            "iaq_mode": {
              "default": "STATIC",
              "docs": "**, string**: IAQ calculation mode. Default is `static` for static applications (e.g. fixed indoor devices). Can be `mobile` for mobile applications (e.g. carry-on devices).\n\n*See also: [bme680_bsec Component/Hub](https://esphome.io/components/sensor/bme680_bsec.html#component-hub)*",
              "key": "Optional",
              "type": "enum",
              "values": {
                "MOBILE": null,
                "STATIC": null
              }
            },
            "id": {
              "docs": "**, [ID](https://esphome.io/guides/configuration-types.html#config-id)**: Manually specify the ID used for code generation. Use this ID in the sensor section to refer to the correct BME680 if you have more than one device. This will also be used to refer to the calibrated BSEC algorithm state saved to flash.\n\n*See also: [bme680_bsec Component/Hub](https://esphome.io/components/sensor/bme680_bsec.html#component-hub)*",
              "id_type": {
                "class": "bme680_bsec::BME680BSECComponent",
                "parents": [
                  "Component",
                  "i2c::I2CDevice"
                ]
              },
              "key": "GeneratedID"
            },
            "sample_rate": {
              "default": "LP",
              "docs": "**, string**: Sample rate. Default is `lp` for low power consumption, sampling every 3 seconds. Can be `ulp` for ultra-low power, sampling every 5 minutes. This controls the sampling rate for gas-dependent sensors and will govern the interval at which the sensor heater is operated. By default, this rate will also be used for temperature, pressure, and humidity sensors but these can be overridden on a per-sensor level if required.\n\n*See also: [bme680_bsec Component/Hub](https://esphome.io/components/sensor/bme680_bsec.html#component-hub)*",
              "key": "Optional",
              "type": "enum",
              "values": {
                "LP": null,
                "ULP": null
              }
            },
            "state_save_interval": {
              "default": "6hours",
              "docs": "**, [Time](https://esphome.io/guides/configuration-types.html#config-time)**: The minimum interval at which to save calibrated BSEC algorithm state to flash so that calibration doesn\u2019t have to start from zero on device restart. Defaults to `6h`.\n\n*See also: [bme680_bsec Component/Hub](https://esphome.io/components/sensor/bme680_bsec.html#component-hub)*",
              "key": "Optional",
              "schema": {
                "extends": [
                  "core.positive_time_period_minutes"
                ]
              },
              "type": "schema"
            },
            "supply_voltage": {
              "default": "3.3V",
              "docs": "**, string**: Supply voltage of the sensor. Default is `3.3V`. Can be set to `1.8V` if your sensor is 1.8V-powered (e.g. the Pimoroni PIM357 BME680 Breakout module).\n\n*See also: [bme680_bsec Component/Hub](https://esphome.io/components/sensor/bme680_bsec.html#component-hub)*",
              "key": "Optional",
              "type": "enum",
              "values": {
                "1.8V": null,
                "3.3V": null
              }
            },
            "temperature_offset": {
              "default": "0",
              "docs": "**, float**: Temperature offset if device is in enclosure and reads too high. This value is subtracted from the reading (e.g. if the sensor reads 5\u00b0C higher than expected, set this to `5`) and also corrects the relative humidity readings. Defaults to `0`.\n\n*See also: [bme680_bsec Component/Hub](https://esphome.io/components/sensor/bme680_bsec.html#component-hub)*",
              "key": "Optional"
            }
          }
        },
        "type": "schema"
      }
    }
  },
  "bme680_bsec.sensor": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "schema": {
          "config_vars": {
            "bme680_bsec_id": {
              "docs": "**, [ID](https://esphome.io/guides/configuration-types.html#config-id)**: Sets the ID of the bme680_bsec component to refer to. Useful when working with multiple devices.\n\n*See also: [bme680_bsec Sensor](https://esphome.io/components/sensor/bme680_bsec.html#sensor)*",
              "key": "GeneratedID",
              "type": "use_id",
              "use_id_type": "bme680_bsec::BME680BSECComponent"
            },
            "breath_voc_equivalent": {
              "docs": "The information for the Breath VOC equivalent humidity sensor.\n  * All options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n  \n  \n\n*See also: [bme680_bsec Sensor](https://esphome.io/components/sensor/bme680_bsec.html#sensor)*",
              "key": "Optional",
              "schema": {
                "config_vars": {
                  "accuracy_decimals": {
                    "default": "1"
                  },
                  "device_class": {
                    "default": "volatile_organic_compounds_parts"
                  },
                  "state_class": {
                    "default": "measurement"
                  },
                  "unit_of_measurement": {
                    "default": "ppm"
                  }
                },
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ]
              },
              "type": "schema"
            },
            "co2_equivalent": {
              "docs": "The information for the CO\u2082 equivalent sensor.\n  * All options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n  \n  \n\n*See also: [bme680_bsec Sensor](https://esphome.io/components/sensor/bme680_bsec.html#sensor)*",
              "key": "Optional",
              "schema": {
                "config_vars": {
                  "accuracy_decimals": {
                    "default": "1"
                  },
                  "device_class": {
                    "default": "carbon_dioxide"
                  },
                  "state_class": {
                    "default": "measurement"
                  },
                  "unit_of_measurement": {
                    "default": "ppm"
                  }
                },
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ]
              },
              "type": "schema"
            },
            "gas_resistance": {
              "docs": "The information for the gas sensor.\n  * All options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n  \n  \n\n*See also: [bme680_bsec Sensor](https://esphome.io/components/sensor/bme680_bsec.html#sensor)*",
              "key": "Optional",
              "schema": {
                "config_vars": {
                  "accuracy_decimals": {
                    "default": "0"
                  },
                  "icon": {
                    "default": "mdi:gas-cylinder"
                  },
                  "state_class": {
                    "default": "measurement"
                  },
                  "unit_of_measurement": {
                    "default": "\u03a9"
                  }
                },
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ]
              },
              "type": "schema"
            },
            "humidity": {
              "docs": "The information for the humidity sensor.\n  * **sample_rate** (*Optional*, string): Optional sample rate override for this sensor. Can be `lp` for low power consumption, sampling every 3 seconds or `ulp` for ultra-low power, sampling every 5 minutes.\n  \n  * All other options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n  \n  \n\n*See also: [bme680_bsec Sensor](https://esphome.io/components/sensor/bme680_bsec.html#sensor)*",
              "key": "Optional",
              "schema": {
                "config_vars": {
                  "accuracy_decimals": {
                    "default": "1"
                  },
                  "device_class": {
                    "default": "humidity"
                  },
                  "sample_rate": {
                    "docs": "**, string**: Optional sample rate override for this sensor. Can be `lp` for low power consumption, sampling every 3 seconds or `ulp` for ultra-low power, sampling every 5 minutes.\n\n*See also: [bme680_bsec Sensor](https://esphome.io/components/sensor/bme680_bsec.html#sensor)*",
                    "key": "Optional",
                    "type": "enum",
                    "values": {
                      "LP": null,
                      "ULP": null
                    }
                  },
                  "state_class": {
                    "default": "measurement"
                  },
                  "unit_of_measurement": {
                    "default": "%"
                  }
                },
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ]
              },
              "type": "schema"
            },
            "iaq": {
              "docs": "The information for the IAQ sensor.\n  * All options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n  \n  \n\n*See also: [bme680_bsec Sensor](https://esphome.io/components/sensor/bme680_bsec.html#sensor)*",
              "key": "Optional",
              "schema": {
                "config_vars": {
                  "accuracy_decimals": {
                    "default": "0"
                  },
                  "icon": {
                    "default": "mdi:gauge"
                  },
                  "state_class": {
                    "default": "measurement"
                  },
                  "unit_of_measurement": {
                    "default": "IAQ"
                  }
                },
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ]
              },
              "type": "schema"
            },
            "iaq_accuracy": {
              "docs": "The information for the numeric IAQ accuracy sensor.\n  * All options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n  \n  \n\n*See also: [bme680_bsec Sensor](https://esphome.io/components/sensor/bme680_bsec.html#sensor)*",
              "key": "Optional",
              "schema": {
                "config_vars": {
                  "accuracy_decimals": {
                    "default": "0"
                  },
                  "icon": {
                    "default": "mdi:checkbox-marked-circle-outline"
                  },
                  "state_class": {
                    "default": "measurement"
                  }
                },
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ]
              },
              "type": "schema"
            },
            "pressure": {
              "docs": "The information for the pressure sensor.\n  * **sample_rate** (*Optional*, string): Optional sample rate override for this sensor. Can be `lp` for low power consumption, sampling every 3 seconds or `ulp` for ultra-low power, sampling every 5 minutes.\n  \n  * All other options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n  \n  \n\n*See also: [bme680_bsec Sensor](https://esphome.io/components/sensor/bme680_bsec.html#sensor)*",
              "key": "Optional",
              "schema": {
                "config_vars": {
                  "accuracy_decimals": {
                    "default": "1"
                  },
                  "device_class": {
                    "default": "atmospheric_pressure"
                  },
                  "sample_rate": {
                    "docs": "**, string**: Optional sample rate override for this sensor. Can be `lp` for low power consumption, sampling every 3 seconds or `ulp` for ultra-low power, sampling every 5 minutes.\n\n*See also: [bme680_bsec Sensor](https://esphome.io/components/sensor/bme680_bsec.html#sensor)*",
                    "key": "Optional",
                    "type": "enum",
                    "values": {
                      "LP": null,
                      "ULP": null
                    }
                  },
                  "state_class": {
                    "default": "measurement"
                  },
                  "unit_of_measurement": {
                    "default": "hPa"
                  }
                },
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ]
              },
              "type": "schema"
            },
            "temperature": {
              "docs": "The information for the temperature sensor.\n  * **sample_rate** (*Optional*, string): Optional sample rate override for this sensor. Can be `lp` for low power consumption, sampling every 3 seconds or `ulp` for ultra-low power, sampling every 5 minutes.\n  \n  * All other options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n  \n  \n\n*See also: [bme680_bsec Sensor](https://esphome.io/components/sensor/bme680_bsec.html#sensor)*",
              "key": "Optional",
              "schema": {
                "config_vars": {
                  "accuracy_decimals": {
                    "default": "1"
                  },
                  "device_class": {
                    "default": "temperature"
                  },
                  "sample_rate": {
                    "docs": "**, string**: Optional sample rate override for this sensor. Can be `lp` for low power consumption, sampling every 3 seconds or `ulp` for ultra-low power, sampling every 5 minutes.\n\n*See also: [bme680_bsec Sensor](https://esphome.io/components/sensor/bme680_bsec.html#sensor)*",
                    "key": "Optional",
                    "type": "enum",
                    "values": {
                      "LP": null,
                      "ULP": null
                    }
                  },
                  "state_class": {
                    "default": "measurement"
                  },
                  "unit_of_measurement": {
                    "default": "\u00b0C"
                  }
                },
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ]
              },
              "type": "schema"
            }
          }
        },
        "type": "schema"
      }
    }
  },
  "bme680_bsec.text_sensor": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "schema": {
          "config_vars": {
            "bme680_bsec_id": {
              "docs": "**, [ID](https://esphome.io/guides/configuration-types.html#config-id)**: Sets the ID of the bme680_bsec component to refer to. Useful when working with multiple devices.\n\n*See also: [bme680_bsec Text Sensor](https://esphome.io/components/sensor/bme680_bsec.html#text-sensor)*",
              "key": "GeneratedID",
              "type": "use_id",
              "use_id_type": "bme680_bsec::BME680BSECComponent"
            },
            "iaq_accuracy": {
              "docs": "The information for the IAQ accuracy sensor. Shows: Stabilizing, Uncertain, Calibrating, Calibrated.\n  * All options from [TextSensor](https://esphome.io/components/text_sensor/index.html#config-text-sensor).\n  \n  \n\n*See also: [bme680_bsec Text Sensor](https://esphome.io/components/sensor/bme680_bsec.html#text-sensor)*",
              "key": "Optional",
              "schema": {
                "config_vars": {
                  "icon": {
                    "default": "mdi:checkbox-marked-circle-outline"
                  }
                },
                "extends": [
                  "text_sensor.TEXT_SENSOR_SCHEMA"
                ]
              },
              "type": "schema"
            }
          }
        },
        "type": "schema"
      }
    }
  }
}