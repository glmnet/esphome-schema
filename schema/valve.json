{
  "valve": {
    "action": {
      "close": {
        "docs": "This [action](https://esphome.io/automations/actions.html#config-action) closes the valve with the given ID when executed.\n\n*See also: [`valve.close` Action](https://esphome.io/components/valve/index.html#valve-close-action)*",
        "schema": {
          "extends": [
            "valve.VALVE_ACTION_SCHEMA"
          ]
        },
        "type": "schema"
      },
      "control": {
        "docs": "This [action](https://esphome.io/automations/actions.html#config-action) is a more generic version of the other valve actions and allows all valve attributes to be set.\n\n*See also: [`valve.control` Action](https://esphome.io/components/valve/index.html#valve-control-action)*",
        "schema": {
          "extends": [
            "valve.VALVE_CONTROL_ACTION_SCHEMA"
          ]
        },
        "type": "schema"
      },
      "open": {
        "docs": "This [action](https://esphome.io/automations/actions.html#config-action) opens the valve with the given ID when executed.\n\n*See also: [`valve.open` Action](https://esphome.io/components/valve/index.html#valve-open-action)*",
        "schema": {
          "extends": [
            "valve.VALVE_ACTION_SCHEMA"
          ]
        },
        "type": "schema"
      },
      "stop": {
        "docs": "This [action](https://esphome.io/automations/actions.html#config-action) stops the valve with the given ID when executed.\n\n*See also: [`valve.stop` Action](https://esphome.io/components/valve/index.html#valve-stop-action)*",
        "schema": {
          "extends": [
            "valve.VALVE_ACTION_SCHEMA"
          ]
        },
        "type": "schema"
      },
      "toggle": {
        "docs": "This [action](https://esphome.io/automations/actions.html#config-action) toggles the valve with the given ID when executed, cycling through the states close/stop/open/stop\u2026 This allows the valve to be controlled by a single push button.\n\n*See also: [`valve.toggle` Action](https://esphome.io/components/valve/index.html#valve-toggle-action)*",
        "schema": {
          "extends": [
            "valve.VALVE_ACTION_SCHEMA"
          ]
        },
        "type": "schema"
      }
    },
    "components": {
      "template": {
        "docs": "The `template` valve platform allows you to create simple valves out of just a few actions and a value lambda. Once defined, it will automatically appear in Home Assistant as a valve and can be controlled through the frontend.\n\n*See also: [Template Valve](https://esphome.io/components/valve/template.html#template-valve)*"
      }
    },
    "schemas": {
      "VALVE_ACTION_SCHEMA": {
        "maybe": "id",
        "schema": {
          "config_vars": {
            "id": {
              "key": "Required",
              "type": "use_id",
              "use_id_type": "valve::Valve"
            }
          }
        },
        "type": "schema"
      },
      "VALVE_CONTROL_ACTION_SCHEMA": {
        "schema": {
          "config_vars": {
            "id": {
              "docs": "**, [ID](https://esphome.io/guides/configuration-types.html#config-id)**: The valve to control.\n\n*See also: [Valve Component](https://esphome.io/components/valve/index.html#valve-control-action)*",
              "key": "Required",
              "type": "use_id",
              "use_id_type": "valve::Valve"
            },
            "position": {
              "docs": "**, float**: The valve position to set.\n  * `0.0` = `0%` = `CLOSED`\n  \n  * `1.0` = `100%` = `OPEN`\n  \n  \n\n*See also: [Valve Component](https://esphome.io/components/valve/index.html#valve-control-action)*",
              "key": "Optional",
              "templatable": true
            },
            "state": {
              "docs": "**, string**: The state to set the valve to - one of `OPEN` or `CLOSE`.\n\n*See also: [Valve Component](https://esphome.io/components/valve/index.html#valve-control-action)*",
              "key": "Optional",
              "templatable": true,
              "type": "enum",
              "values": {
                "CLOSED": null,
                "OPEN": null
              }
            },
            "stop": {
              "docs": "**, boolean**: Whether to stop the valve.\n\n*See also: [Valve Component](https://esphome.io/components/valve/index.html#valve-control-action)*",
              "key": "Optional",
              "templatable": true,
              "type": "boolean"
            }
          }
        },
        "type": "schema"
      },
      "VALVE_SCHEMA": {
        "schema": {
          "config_vars": {
            "device_class": {
              "docs": "**, string**: The device class for the sensor. See [https://www.home-assistant.io/components/valve/](https://www.home-assistant.io/components/valve/) for a list of available options.\n\n*See also: [Valve Component](https://esphome.io/components/valve/index.html#base-valve-configuration)*",
              "key": "Optional",
              "type": "enum",
              "values": {
                "": null,
                "gas": null,
                "water": null
              }
            },
            "id": {
              "docs": "**, string**: Manually specify the ID for code generation. At least one of **id** and **name** must be specified.\n\n*See also: [Valve Component](https://esphome.io/components/valve/index.html#base-valve-configuration)*",
              "id_type": {
                "class": "valve::Valve",
                "parents": [
                  "EntityBase"
                ]
              },
              "key": "GeneratedID"
            },
            "mqtt_id": {
              "id_type": {
                "class": "mqtt::MQTTValveComponent",
                "parents": [
                  "Component",
                  "mqtt::MQTTComponent"
                ]
              },
              "key": "Optional"
            },
            "on_closed": {
              "key": "Optional",
              "type": "trigger"
            },
            "on_open": {
              "key": "Optional",
              "type": "trigger"
            },
            "position_command_topic": {
              "docs": "**, string**: The topic to receive valve position commands on.\n\n*See also: [Valve Component](https://esphome.io/components/valve/index.html#base-valve-configuration)*",
              "key": "Optional"
            },
            "position_state_topic": {
              "docs": "**, string**: The topic to publish valve position changes to.\n\n*See also: [Valve Component](https://esphome.io/components/valve/index.html#base-valve-configuration)*",
              "key": "Optional"
            },
            "web_server": {
              "key": "Optional",
              "schema": {
                "config_vars": {
                  "sorting_group_id": {
                    "key": "Optional",
                    "type": "use_id",
                    "use_id_type": "int"
                  },
                  "sorting_weight": {
                    "key": "Optional"
                  },
                  "web_server_id": {
                    "key": "Optional",
                    "type": "use_id",
                    "use_id_type": "web_server::WebServer"
                  }
                }
              },
              "type": "schema"
            }
          },
          "extends": [
            "core.ENTITY_BASE_SCHEMA",
            "core.MQTT_COMMAND_COMPONENT_SCHEMA"
          ]
        },
        "type": "schema"
      }
    }
  }
}