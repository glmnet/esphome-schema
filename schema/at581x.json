{
  "at581x": {
    "action": {
      "reset": {
        "docs": "Restart the sensor.\n\n*See also: [`at581x.reset` Action](https://esphome.io/components/at581x.html#at581x-reset-action)*",
        "maybe": "id",
        "schema": {
          "config_vars": {
            "id": {
              "docs": "**, [ID](https://esphome.io/guides/configuration-types.html#config-id)**: Manually specify the ID of the AT581x component. Useful when multiple instances of this component are defined.\n\n*See also: [at581x Switch](https://esphome.io/components/at581x.html#id3)*",
              "key": "Required",
              "type": "use_id",
              "use_id_type": "at581x::AT581XComponent"
            }
          }
        },
        "type": "schema"
      },
      "settings": {
        "docs": "The hardware frontend reset option is only required to reset the frontend in case it is struck, before sending the new configuration. However, a frontend reset is always performed after changing the settings.\n\n*See also: [`at581x.settings` Action](https://esphome.io/components/at581x.html#at581x-settings-action)*",
        "schema": {
          "config_vars": {
            "frequency": {
              "default": "5800MHz",
              "docs": "**, int**: Any of the possible frequencies (5696, 5715, 5730, 5748, 5765, 5784, 5800, 5819, 5836, 5851, 5869, 5888) in MHz.\n\n*See also: [at581x Switch](https://esphome.io/components/at581x.html#id2)*",
              "key": "Optional",
              "templatable": true,
              "type": "enum",
              "values": {
                "5696000000.0": null,
                "5715000000.0": null,
                "5730000000.0": null,
                "5748000000.0": null,
                "5765000000.0": null,
                "5784000000.0": null,
                "5800000000.0": null,
                "5819000000.0": null,
                "5836000000.0": null,
                "5851000000.0": null,
                "5869000000.0": null,
                "5888000000.0": null
              }
            },
            "hw_frontend_reset": {
              "docs": "**, boolean**: If set to true, a reset of the analog frontend will be performed before changing other options. Ignored if not set or set to `false`. Upon applying the settings a frontend reset will be performed anyway, this is only useful if the sensor is not answering or locked up.\n\n*See also: [at581x Switch](https://esphome.io/components/at581x.html#id2)*",
              "key": "Optional",
              "templatable": true,
              "type": "boolean"
            },
            "id": {
              "docs": "**, [ID](https://esphome.io/guides/configuration-types.html#config-id)**: Manually specify the ID of the sensor on which settings should be changed. If only one radar is defined, this is optional.\n\n*See also: [at581x Switch](https://esphome.io/components/at581x.html#id2)*",
              "key": "Required",
              "type": "use_id",
              "use_id_type": "at581x::AT581XComponent"
            },
            "power_consumption": {
              "default": "70uA",
              "docs": "**, int**: Any of the possible power profile (48, 56, 63, 70, 77, 91, 105, 115, 40, 44, 47, 51, 54, 61, 68, 78) in \u00b5A\n\n*See also: [at581x Switch](https://esphome.io/components/at581x.html#id2)*",
              "key": "Optional",
              "templatable": true,
              "type": "enum",
              "values": {
                "0.000105": null,
                "0.000115": null,
                "4.4e-05": null,
                "4.7e-05": null,
                "4.8e-05": null,
                "4e-05": null,
                "5.1e-05": null,
                "5.4e-05": null,
                "5.6e-05": null,
                "6.1e-05": null,
                "6.3e-05": null,
                "6.8e-05": null,
                "7.7e-05": null,
                "7.8e-05": null,
                "7e-05": null,
                "9.1e-05": null
              }
            },
            "poweron_selfcheck_time": {
              "default": "2000ms",
              "docs": "**, int**: The delay to perform self check and calibration on power on. Recommended not to change this\n\n*See also: [at581x Switch](https://esphome.io/components/at581x.html#id2)*",
              "key": "Optional",
              "schema": {
                "extends": [
                  "core.positive_time_period_milliseconds"
                ]
              },
              "templatable": true,
              "type": "schema"
            },
            "protect_time": {
              "default": "1000ms",
              "docs": "**, int**: The delay after an end-of-trigger event where the detection will not trigger anymore. Max 65535ms\n\n*See also: [at581x Switch](https://esphome.io/components/at581x.html#id2)*",
              "key": "Optional",
              "schema": {
                "extends": [
                  "core.positive_time_period_milliseconds"
                ]
              },
              "templatable": true,
              "type": "schema"
            },
            "sensing_distance": {
              "default": "823",
              "docs": "**, int**: A unitless number, in range 0-1023, specifying the maximum distance to detect motion\n\n*See also: [at581x Switch](https://esphome.io/components/at581x.html#id2)*",
              "key": "Optional",
              "templatable": true,
              "type": "integer"
            },
            "stage_gain": {
              "default": "3",
              "docs": "**, int**: The analog gain to use for threshold test. Any value in range 0-12, with 12 being the lowest gain and 0 the highest\n\n*See also: [at581x Switch](https://esphome.io/components/at581x.html#id2)*",
              "key": "Optional",
              "templatable": true,
              "type": "integer"
            },
            "trigger_base": {
              "default": "500ms",
              "docs": "**, int**: The delay while a detection must be active to change the state of the sensor. Max 65535ms\n\n*See also: [at581x Switch](https://esphome.io/components/at581x.html#id2)*",
              "key": "Optional",
              "schema": {
                "extends": [
                  "core.positive_time_period_milliseconds"
                ]
              },
              "templatable": true,
              "type": "schema"
            },
            "trigger_keep": {
              "default": "1500ms",
              "docs": "**, int**: The delay that the output will stay high after a detection event. This is usually what you want to change.\n\n*See also: [at581x Switch](https://esphome.io/components/at581x.html#id2)*",
              "key": "Optional",
              "schema": {
                "extends": [
                  "core.positive_time_period_milliseconds"
                ]
              },
              "templatable": true,
              "type": "schema"
            }
          }
        },
        "type": "schema"
      }
    },
    "schemas": {
      "CONFIG_SCHEMA": {
        "is_list": true,
        "schema": {
          "config_vars": {
            "address": {
              "data_type": "hex_uint8_t",
              "default": "40",
              "key": "Optional"
            },
            "i2c_id": {
              "docs": "**, [ID](https://esphome.io/guides/configuration-types.html#config-id)**: Manually specify the ID of the [I\u00b2C Bus](https://esphome.io/components/i2c.html) if you want to use multiple I2C buses.\n\n*See also: [at581x Component/Hub](https://esphome.io/components/at581x.html#configuration-variables)*",
              "key": "GeneratedID",
              "type": "use_id",
              "use_id_type": "i2c::I2CBus"
            },
            "id": {
              "docs": "**, [ID](https://esphome.io/guides/configuration-types.html#config-id)**: Manually specify the ID used for code generation. Necessary if you want to define multiple instances of this component.\n\n*See also: [at581x Component/Hub](https://esphome.io/components/at581x.html#configuration-variables)*",
              "id_type": {
                "class": "at581x::AT581XComponent",
                "parents": [
                  "Component",
                  "i2c::I2CDevice"
                ]
              },
              "key": "GeneratedID"
            }
          },
          "extends": [
            "core.COMPONENT_SCHEMA"
          ]
        },
        "type": "schema"
      }
    }
  },
  "at581x.switch": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "schema": {
          "config_vars": {
            "at581x_id": {
              "docs": "**, [ID](https://esphome.io/guides/configuration-types.html#config-id)**: The ID of the AT581x component defined above. Required when multiple instances of the `at581x` component are defined.\n\n*See also: [at581x Switch](https://esphome.io/components/at581x.html#id1)*",
              "key": "GeneratedID",
              "type": "use_id",
              "use_id_type": "at581x::AT581XComponent"
            },
            "device_class": {
              "default": "switch"
            },
            "icon": {
              "default": "mdi:wifi"
            },
            "id": {
              "id_type": {
                "class": "at581x::RFSwitch",
                "parents": [
                  "EntityBase",
                  "switch_::Switch"
                ]
              },
              "key": "GeneratedID"
            },
            "restore_mode": {
              "default": "ALWAYS_OFF",
              "key": "Optional",
              "type": "enum",
              "values": {
                "ALWAYS_OFF": null,
                "ALWAYS_ON": null,
                "DISABLED": null,
                "RESTORE_DEFAULT_OFF": null,
                "RESTORE_DEFAULT_ON": null,
                "RESTORE_INVERTED_DEFAULT_OFF": null,
                "RESTORE_INVERTED_DEFAULT_ON": null
              }
            }
          },
          "extends": [
            "switch._SWITCH_SCHEMA"
          ]
        },
        "type": "schema"
      }
    }
  }
}